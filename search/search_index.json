{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to AWS SA Professional","title":"Welcome to AWS SA Professional"},{"location":"#welcome-to-aws-sa-professional","text":"","title":"Welcome to AWS SA Professional"},{"location":"aws-sa-pro-slack/","text":"questions topic AWS MSK (kafka), DataSync, many Redshift and EMR questions and RAM. policy questions where you had to decifer policy code EC2, networking, ECB \"availability\" questions and migration questions. There were lots and lots and LOTS of questions on: AWS Organisations Migrations RAM TGW ECS GWLB, Client VPN, S3, GA, DDB, CodeDeploy, CodePipeline, Transfer Family, RDS Proxy Many had an Organizations angle, I had MSK too few on prem/cloud connectivity and DR, DX, VPN, and Transit GW DDB for global availability and Global tables in the middle of the answers, but the words 'data corruption..' were in the Q another very similar answer included backup which would allow recovery from corruptions. AWS Organizations (easily 5-10), networking (VPN, Direct Connect, DC & Transit Gateway, VPC Peering), Aurora vs RDS and DynamoDB, S3 access logs, CF Stack Sets, Storage Gateway, Resource Sharing, Transfer Family Lots of organisation / RAM questions/ cross region services and a question on GWLB. whitepapers AWS Organizations User Guide, Building a Scalable and Secure Multi-VPC AWS Network Infrastructure Whitepaper, and Serverless Architectures with AWS Lambda Whitepaper.","title":"Aws sa pro slack"},{"location":"aws-sa-pro-slack/#questions-topic","text":"AWS MSK (kafka), DataSync, many Redshift and EMR questions and RAM. policy questions where you had to decifer policy code EC2, networking, ECB \"availability\" questions and migration questions. There were lots and lots and LOTS of questions on: AWS Organisations Migrations RAM TGW ECS GWLB, Client VPN, S3, GA, DDB, CodeDeploy, CodePipeline, Transfer Family, RDS Proxy Many had an Organizations angle, I had MSK too few on prem/cloud connectivity and DR, DX, VPN, and Transit GW DDB for global availability and Global tables in the middle of the answers, but the words 'data corruption..' were in the Q another very similar answer included backup which would allow recovery from corruptions. AWS Organizations (easily 5-10), networking (VPN, Direct Connect, DC & Transit Gateway, VPC Peering), Aurora vs RDS and DynamoDB, S3 access logs, CF Stack Sets, Storage Gateway, Resource Sharing, Transfer Family Lots of organisation / RAM questions/ cross region services and a question on GWLB.","title":"questions topic"},{"location":"aws-sa-pro-slack/#whitepapers","text":"AWS Organizations User Guide, Building a Scalable and Secure Multi-VPC AWS Network Infrastructure Whitepaper, and Serverless Architectures with AWS Lambda Whitepaper.","title":"whitepapers"},{"location":"connecton-draininig/","text":"Connection Draining only supported in Classic Load Balancer (CLB) gracefully disconnect the connections (ASG/EC2) allows in-flight request to complete timeout value : 1s - 3600s ( default : 300s) does not apply to failed health check applies when instance taken out of ASG - manually or ASG activities InService: Instance deregistraiton currently in progress AS waiting for all connections to complete of timeout - whichever occur first Registration Delay supported in ALB, NLB, GWLB - defined on the target group stop sending requests to deregistration targtes existing connections can continue until they complete naturally enabled by default with value 300s 0-3600s X-Forwarded-For set of http/https headers (layer 7) header is appended or added by proxies/LB http header -> X-Forwarded-For: client,proxy1,proxy2 client is the left most in the list Supported in CLB and ALB (not supported in NLB) PROXY protocol proxy protocol works at layer 4 tcp header works with layer 4 also works with http/https v1 (human readable) - CLB || v2 (binary encoded) - NLB not supported in ALB use case -> unbroken https encryption between client and server Gateway Load Balancer - GWLB run and scale 3rd party appliances examples - firewalls, intrusion detection and prevention systems inbound and outbound traffic (transparent inspection an protection) GWLB Endpoints -> traffic enters/leaves via these endpoints GWLB -> balances accross multiple backend appliances GENEVE protocol -> tunneling protocol (between GWLB and backend instances) Traffic and metadata is tunnelled using GENEVE protocol","title":"Connecton draininig"},{"location":"connecton-draininig/#connection-draining","text":"only supported in Classic Load Balancer (CLB) gracefully disconnect the connections (ASG/EC2) allows in-flight request to complete timeout value : 1s - 3600s ( default : 300s) does not apply to failed health check applies when instance taken out of ASG - manually or ASG activities InService: Instance deregistraiton currently in progress AS waiting for all connections to complete of timeout - whichever occur first","title":"Connection Draining"},{"location":"connecton-draininig/#registration-delay","text":"supported in ALB, NLB, GWLB - defined on the target group stop sending requests to deregistration targtes existing connections can continue until they complete naturally enabled by default with value 300s 0-3600s","title":"Registration Delay"},{"location":"connecton-draininig/#x-forwarded-for","text":"set of http/https headers (layer 7) header is appended or added by proxies/LB http header -> X-Forwarded-For: client,proxy1,proxy2 client is the left most in the list Supported in CLB and ALB (not supported in NLB)","title":"X-Forwarded-For"},{"location":"connecton-draininig/#proxy-protocol","text":"proxy protocol works at layer 4 tcp header works with layer 4 also works with http/https v1 (human readable) - CLB || v2 (binary encoded) - NLB not supported in ALB use case -> unbroken https encryption between client and server","title":"PROXY protocol"},{"location":"connecton-draininig/#gateway-load-balancer-gwlb","text":"run and scale 3rd party appliances examples - firewalls, intrusion detection and prevention systems inbound and outbound traffic (transparent inspection an protection) GWLB Endpoints -> traffic enters/leaves via these endpoints GWLB -> balances accross multiple backend appliances GENEVE protocol -> tunneling protocol (between GWLB and backend instances) Traffic and metadata is tunnelled using GENEVE protocol","title":"Gateway Load Balancer - GWLB"},{"location":"greengrass/","text":"AWS Greengrass Extends some AWS services to the edge Some compute, messaging, data management, sync and ML capabilities Locally run lambdas Locally run containers IOT Device Shadows locally - synced back to AWS Local messaging - MQTT Local hardware access for Lambda AWS IoT Greengrass makes it possible for customers to build IoT devices and application logic. Specifically, AWS IoT Greengrass provides cloud-based management of application logic that runs on devices. Locally deployed Lambda functions and connectors are triggered by local events, messages from the cloud, or other sources . In AWS IoT Greengrass, devices securely communicate on a local network and exchange messages with each other without having to connect to the cloud . AWS IoT Greengrass provides a local pub/sub message manager that can intelligently buffer messages if connectivity is lost so that inbound and outbound messages to the cloud are preserved.","title":"Greengrass"},{"location":"greengrass/#aws-greengrass","text":"Extends some AWS services to the edge Some compute, messaging, data management, sync and ML capabilities Locally run lambdas Locally run containers IOT Device Shadows locally - synced back to AWS Local messaging - MQTT Local hardware access for Lambda AWS IoT Greengrass makes it possible for customers to build IoT devices and application logic. Specifically, AWS IoT Greengrass provides cloud-based management of application logic that runs on devices. Locally deployed Lambda functions and connectors are triggered by local events, messages from the cloud, or other sources . In AWS IoT Greengrass, devices securely communicate on a local network and exchange messages with each other without having to connect to the cloud . AWS IoT Greengrass provides a local pub/sub message manager that can intelligently buffer messages if connectivity is lost so that inbound and outbound messages to the cloud are preserved.","title":"AWS Greengrass"},{"location":"iot/","text":"IOT (internet of things) AWS IOT core is a suite of products Used for managing 1,000,000s of IOT devices temp, wind, water sensors, lights, valve control.. Provisioning, updates and controls of IOT devices Unreliable links -- device shadows Rules and event-driven integration with AWS services","title":"Iot"},{"location":"iot/#iot-internet-of-things","text":"AWS IOT core is a suite of products Used for managing 1,000,000s of IOT devices temp, wind, water sensors, lights, valve control.. Provisioning, updates and controls of IOT devices Unreliable links -- device shadows Rules and event-driven integration with AWS services","title":"IOT (internet of things)"},{"location":"mechanical-turk/","text":"Mechanical Turk (MTurk) Amazon Mechanical Turk (MTurk) is a crowdsourcing marketplace that makes it easier for individuals and businesses to outsource their processes and jobs to a distributed workforce who can perform these tasks virtually. Managed human task outsourcing - API's - extend your app with humans Requester post Human Intelligence Tasks (HITs) Workers earn by completing HITs Pay per Task, Perfect for tasks suited for humans rather than ML Qualifications - worker attribute, can require a test and can be requirement to complete HITs Data collection, manual processing, image classification can create data to use for ML training List of 1000 vets and cupcakes store - find telephone, opneing hours Use Cases MTurk can be a great way to minimize the costs and time required for each stage of ML development. It is easy to collect and annotate the massive amounts of data required for training machine learning (ML) models with MTurk. Common examples include the moderation of web and social media content, categorization of products or images, and the collection of data from websites or other resources.","title":"Mechanical turk"},{"location":"mechanical-turk/#mechanical-turk-mturk","text":"Amazon Mechanical Turk (MTurk) is a crowdsourcing marketplace that makes it easier for individuals and businesses to outsource their processes and jobs to a distributed workforce who can perform these tasks virtually. Managed human task outsourcing - API's - extend your app with humans Requester post Human Intelligence Tasks (HITs) Workers earn by completing HITs Pay per Task, Perfect for tasks suited for humans rather than ML Qualifications - worker attribute, can require a test and can be requirement to complete HITs Data collection, manual processing, image classification can create data to use for ML training List of 1000 vets and cupcakes store - find telephone, opneing hours","title":"Mechanical Turk (MTurk)"},{"location":"mechanical-turk/#use-cases","text":"MTurk can be a great way to minimize the costs and time required for each stage of ML development. It is easy to collect and annotate the massive amounts of data required for training machine learning (ML) models with MTurk. Common examples include the moderation of web and social media content, categorization of products or images, and the collection of data from websites or other resources.","title":"Use Cases"},{"location":"media-convert/","text":"Elemental MediaConvert (MC) & Elastic Transcoder (ET) File-based video transcoding services MC ~= v2 of ET (almost) Serverless - pay for resources used Add jobs to pipelines (ET) or Queues (MC) File loaded from S3, processed, stored on S3 MC supports EventBridge (CWEvents) for job signaling When and what to use ?? ET is legacy, default to MC MC supports more codecs, and is designed for larger volume and paralled processing MC supports reserved pricing .. ET for WebM (VP8/VP9) ET for animated GIF ET for MP3, FLAC, Vorbis and WAV Everything else .. MC","title":"Media convert"},{"location":"media-convert/#elemental-mediaconvert-mc-elastic-transcoder-et","text":"File-based video transcoding services MC ~= v2 of ET (almost) Serverless - pay for resources used Add jobs to pipelines (ET) or Queues (MC) File loaded from S3, processed, stored on S3 MC supports EventBridge (CWEvents) for job signaling","title":"Elemental MediaConvert (MC) &amp; Elastic Transcoder (ET)"},{"location":"media-convert/#when-and-what-to-use","text":"ET is legacy, default to MC MC supports more codecs, and is designed for larger volume and paralled processing MC supports reserved pricing .. ET for WebM (VP8/VP9) ET for animated GIF ET for MP3, FLAC, Vorbis and WAV Everything else .. MC","title":"When and what to use ??"},{"location":"serverless-application-model/","text":"Serverless Application Model - SAM open-source framework for building serverless appliations AWS SAM template specification extenstion of CloudFormation transform, globals & resources (CFN & SAM) SAM CLI locally build SAM apps local testing deploy to AWS Notes SES begins with sandbox mode in sandbox will require whitelisting email addresses either verify with individual email or remove it from sandbox (takes longer)","title":"Serverless application model"},{"location":"serverless-application-model/#serverless-application-model-sam","text":"open-source framework for building serverless appliations AWS SAM template specification extenstion of CloudFormation transform, globals & resources (CFN & SAM) SAM CLI locally build SAM apps local testing deploy to AWS","title":"Serverless Application Model - SAM"},{"location":"serverless-application-model/#notes","text":"SES begins with sandbox mode in sandbox will require whitelisting email addresses either verify with individual email or remove it from sandbox (takes longer)","title":"Notes"},{"location":"service-catalog/","text":"what is service catalog? Document or Database created by an IT Team Organised collection of proucts Offered by the IT team Key Product Information - Product Owner, Cost, Requirements, Support Information, Dependencies Defines approval of provisioning from IT and Customer Side Managed costs and scale service delivery AWS service catalog regional service allow end users to deploy infrastructue without having actual infrastructure permission Self-service Portal for end users launch predefined (by admin) products end users permission can be controlled Admins can define those products and the permissions required to launch them Build products into portfolios","title":"Service catalog"},{"location":"service-catalog/#what-is-service-catalog","text":"Document or Database created by an IT Team Organised collection of proucts Offered by the IT team Key Product Information - Product Owner, Cost, Requirements, Support Information, Dependencies Defines approval of provisioning from IT and Customer Side Managed costs and scale service delivery","title":"what is service catalog?"},{"location":"service-catalog/#aws-service-catalog","text":"regional service allow end users to deploy infrastructue without having actual infrastructure permission Self-service Portal for end users launch predefined (by admin) products end users permission can be controlled Admins can define those products and the permissions required to launch them Build products into portfolios","title":"AWS service catalog"},{"location":"simple-workflow-service/","text":"Simple Workflow Service - SWF Overview Build workflows - cordination over distributed components Predecessor to Step Functions - uses Instances/Servers Same patterns/anti-patterns - long running workflows Activity Task and Activity Worker Decider schedule task provides inputs to activity worker process events while workflow is in progress ends the workflow when objective has been completed 1 years of maximum runtime SWF vs step-functions Default - Step Functions - serverless/lower admin AWS Flow Framework --> SWF External Signals to intervene in process -> SWF Launch child flows - return to parent -> SWF Bespoke/complex decisions -> SWF (customer decider applications) Mechanical Turk -> SWF (suggested AWS architecture) Over time Step Functions will replace SWF","title":"Simple workflow service"},{"location":"simple-workflow-service/#simple-workflow-service-swf","text":"","title":"Simple Workflow Service - SWF"},{"location":"simple-workflow-service/#overview","text":"Build workflows - cordination over distributed components Predecessor to Step Functions - uses Instances/Servers Same patterns/anti-patterns - long running workflows Activity Task and Activity Worker Decider schedule task provides inputs to activity worker process events while workflow is in progress ends the workflow when objective has been completed 1 years of maximum runtime","title":"Overview"},{"location":"simple-workflow-service/#swf-vs-step-functions","text":"Default - Step Functions - serverless/lower admin AWS Flow Framework --> SWF External Signals to intervene in process -> SWF Launch child flows - return to parent -> SWF Bespoke/complex decisions -> SWF (customer decider applications) Mechanical Turk -> SWF (suggested AWS architecture) Over time Step Functions will replace SWF","title":"SWF vs step-functions"},{"location":"step-functions/","text":"AWS Step Functions - Long running serverless workflows Limitations of lambda lambda -> FAAS 15 min - max execution time functions can be chained together. (scaling is tedious and difficult to maintain) runtime environments are stateless State Machines Serverless workflow ... START -> STATES -> END States are THINGS which occur Maximum duration - 1 year Standard Workflow & Express Workflow Started via API gateway, IOT rules, EventBridge, Lambda ... Amazon State Language (ASL) - JSON Template IAM Role is used for permissios","title":"Step functions"},{"location":"step-functions/#limitations-of-lambda","text":"lambda -> FAAS 15 min - max execution time functions can be chained together. (scaling is tedious and difficult to maintain) runtime environments are stateless","title":"Limitations of lambda"},{"location":"step-functions/#state-machines","text":"Serverless workflow ... START -> STATES -> END States are THINGS which occur Maximum duration - 1 year Standard Workflow & Express Workflow Started via API gateway, IOT rules, EventBridge, Lambda ... Amazon State Language (ASL) - JSON Template IAM Role is used for permissios","title":"State Machines"},{"location":"api-gateway/api-gateway/","text":"API Gateway create and manage APIs highly available and scalable handles authorization, throttling, caching, CORS, transformations, OpenAPI spec direct integrations with AWS services (dynamo, step-functions, SNS) public services - both on-premise and AWS HTTP APIs, REST APIs and Websocket APIs Overview Authentication Endpoint Types Edge Optimized routed to the nearest cloudfront POP (point of presence) Regional clients in the same region Private endpoint accessible only withing a VPC via interface endpoint Stages Error Codes 4XX - Client Error - Invalid request on client side 5XX - Server Error - Valid request, backend issue API Gateway Timeout Limit - 29s HTTP Status Code Error code Retry 400 Bad Request Exception (generic) No 403 Access Denied Exception No 404 Not Found Exception No 409 Conflict Exception No 429 Limit Exceeded Exception No 429 Too Many Requests Exception Yes 502 Bad Gateway Exception, usually for an incompatible output returned from a Lambda proxy integration backend and occasionally for out-of-order invocations due to heavy loads. Yes if idempotent 503 Service Unavailable Exception Yes 504 Endpoint Request Timed-out Exception Yes if idempotent Caching Caching is done per stage. Methods and Resources Integrations API methods are integrated with a backend endpoint MOCK - test without backend HTTP - Backend http endpoint (configure both integration request and response) HTTP Proxy - pass through to integration unmodified and return to the client unmodified (backedn need to use supported format) AWS - allows an API expose AWS service actions AWS_PROXY (lambda) - low admin overhead lambda endpoint heavy lifting done by lambda instead of gateway Mapping Templates used for AWS and HTTP (non proxy) integrations modify or rename parameters modify the body or heaers of the request filtering - removing anything which is not needed uses Velocity Templae Language (VTL) Example - using mapping template to transform REST (gateway) to SOAP (backend) Stages and Deployments Changes made in API gateway are not LIVE The current API state needs to be deployed to a stage Stages can be environments (PROD, DEV, TEST) or versions (v1, v2, v3) for breaking changes Each stage has its own configuration versions are immutable in gateway and can be overwritten using configuration Swagger and OpenAPI OpenAPI (OAS) formally known as swagger Swagger = OpenAPI V2 OpenAPI V3 is a more recent version API description format for REST API's Endpoints ( /listcats ) and Operations ( GET /listcats ) input and output parameters & Authentication methods non tech information - contact info, licencse, terms of use... Import existing OpenAPI spec + update permissions on resource policy for lambda","title":"API Gateway"},{"location":"api-gateway/api-gateway/#api-gateway","text":"create and manage APIs highly available and scalable handles authorization, throttling, caching, CORS, transformations, OpenAPI spec direct integrations with AWS services (dynamo, step-functions, SNS) public services - both on-premise and AWS HTTP APIs, REST APIs and Websocket APIs","title":"API Gateway"},{"location":"api-gateway/api-gateway/#overview","text":"","title":"Overview"},{"location":"api-gateway/api-gateway/#authentication","text":"","title":"Authentication"},{"location":"api-gateway/api-gateway/#endpoint-types","text":"Edge Optimized routed to the nearest cloudfront POP (point of presence) Regional clients in the same region Private endpoint accessible only withing a VPC via interface endpoint","title":"Endpoint Types"},{"location":"api-gateway/api-gateway/#stages","text":"","title":"Stages"},{"location":"api-gateway/api-gateway/#error-codes","text":"4XX - Client Error - Invalid request on client side 5XX - Server Error - Valid request, backend issue API Gateway Timeout Limit - 29s HTTP Status Code Error code Retry 400 Bad Request Exception (generic) No 403 Access Denied Exception No 404 Not Found Exception No 409 Conflict Exception No 429 Limit Exceeded Exception No 429 Too Many Requests Exception Yes 502 Bad Gateway Exception, usually for an incompatible output returned from a Lambda proxy integration backend and occasionally for out-of-order invocations due to heavy loads. Yes if idempotent 503 Service Unavailable Exception Yes 504 Endpoint Request Timed-out Exception Yes if idempotent","title":"Error Codes"},{"location":"api-gateway/api-gateway/#caching","text":"Caching is done per stage.","title":"Caching"},{"location":"api-gateway/api-gateway/#methods-and-resources","text":"","title":"Methods and Resources"},{"location":"api-gateway/api-gateway/#integrations","text":"API methods are integrated with a backend endpoint MOCK - test without backend HTTP - Backend http endpoint (configure both integration request and response) HTTP Proxy - pass through to integration unmodified and return to the client unmodified (backedn need to use supported format) AWS - allows an API expose AWS service actions AWS_PROXY (lambda) - low admin overhead lambda endpoint heavy lifting done by lambda instead of gateway Mapping Templates used for AWS and HTTP (non proxy) integrations modify or rename parameters modify the body or heaers of the request filtering - removing anything which is not needed uses Velocity Templae Language (VTL) Example - using mapping template to transform REST (gateway) to SOAP (backend)","title":"Integrations"},{"location":"api-gateway/api-gateway/#stages-and-deployments","text":"Changes made in API gateway are not LIVE The current API state needs to be deployed to a stage Stages can be environments (PROD, DEV, TEST) or versions (v1, v2, v3) for breaking changes Each stage has its own configuration versions are immutable in gateway and can be overwritten using configuration","title":"Stages and Deployments"},{"location":"api-gateway/api-gateway/#swagger-and-openapi","text":"OpenAPI (OAS) formally known as swagger Swagger = OpenAPI V2 OpenAPI V3 is a more recent version API description format for REST API's Endpoints ( /listcats ) and Operations ( GET /listcats ) input and output parameters & Authentication methods non tech information - contact info, licencse, terms of use... Import existing OpenAPI spec + update permissions on resource policy for lambda","title":"Swagger and OpenAPI"},{"location":"cloudformation/cloudformation/","text":"AWS cloudformation IaaS logical resources => physical resources Stacks non-portable templates hardcoded s3 bucket name or AMI for EC2 instances template parameters - accept inputs from CLI/API/Console when a stack is created or updated psuedo paramters AWS make available parameters can be used even without specifying in template parameters - e.g- AWS::Region, AWS::AccountId, AWS::StackName, AWS::StackId intrinsic functions aws refrence template mappings key value mappings one key or top & second level !FindInMap instrinsic function improves template portability conditions evaluated to either TRUE or FALSE depends on in-built dependency order/tree (VPC => subnet => EC2) determined by CloudFormation explicit defined control dependency order wait conditions cloudformation signal configure cloudformation to hold wait for 'X' no. of success signals wait for timeout (12 hr max) If success signals received .. CREATE_COMPLETE if failure signal received.. creation fails if timeout is reached .. creation fails CreationPolicy or WaitCondition CreationPolicy nested stacks overcome the 500 Resource Limi of one stack modular templates ... code reuse make the installation process easier ..nested stack created by the root stack :rotating_light: use only when everything is lifecycle linked cross-stack references outputs are normally not visible from other stacks nested references can reference them.. outputs are exported .. making them visible from other stacks Exports must have a unique name in the region Fn::ImportValue can be used instead of Ref stack sets deploy CFN stacks across many accounts & regions StackSets are containers in an admin account ...contain stack instances .. which reference stacks Stack instances & stacks are in target accounts Each stack = 1 region in 1 account :rotating_light: Security = self-managed or sevice-managed keys and concepts concurrent accounts - more conncurent account=>faster the deployment failure tolerance - no. of failed individual stacks to determine the whole set to be failed retain stacks - to retain stack in aws account when the set it deleted scenarios Enable AWS Config AWS Config Rules - MFA, EIPS, EBS Encryption Create IAM Roles for cross-account access deletion policy DeletionPolicy By default, resources associated with CFT is deleted when the templete is deleted = which can cause data loss Delete (Default), Retain or (if supported) Snapshot Snapshot supported by EBS volume, ElastiCache, Neptune, RDS, Redshift Snapshots continue on pst Stack lifetime - you have to clean up ($$) ONLY APPLIES TO DELETE .. NOT REPLACE when resource is deleted from the template and cft is redeployed when the whole template is deleted stack roles CFN uses the permissions of the logged in identity requires permissions for AWS CFN can assume a role to gain the permission Lets you implement role seperation The identity creating the stack only need PassRole and doesnot need resource permissions CloudFormationInit & cnf-init Simple configuration management system Configuration directives stored in template AWS::CloudFormation::Init part of logical resource Procedural - HOW (User Data) ... vs WHAT (cfn-init) - idompotent cnf-init helper script - installed on EC2 OS (make it so) cnf-hup cfn-hup helper is a daemon which can be installed .. it detects changes in resource metadata .. running configurable actions when a change is detected . UpdateStack => update config on EC2 instances ChangeSets Change Sets let you preview changes ( A Change Set ) ..multiple different versions for a stakc (lots of change sets) Chosen changes can be applied by executing the change set CustomResources logical resources in a tempalte create, update and delete physical resources","title":"Cloudformation"},{"location":"cloudformation/cloudformation/#aws-cloudformation","text":"IaaS logical resources => physical resources Stacks non-portable templates hardcoded s3 bucket name or AMI for EC2 instances template parameters - accept inputs from CLI/API/Console when a stack is created or updated psuedo paramters AWS make available parameters can be used even without specifying in template parameters - e.g- AWS::Region, AWS::AccountId, AWS::StackName, AWS::StackId intrinsic functions aws refrence template mappings key value mappings one key or top & second level !FindInMap instrinsic function improves template portability conditions evaluated to either TRUE or FALSE depends on in-built dependency order/tree (VPC => subnet => EC2) determined by CloudFormation explicit defined control dependency order wait conditions cloudformation signal configure cloudformation to hold wait for 'X' no. of success signals wait for timeout (12 hr max) If success signals received .. CREATE_COMPLETE if failure signal received.. creation fails if timeout is reached .. creation fails CreationPolicy or WaitCondition CreationPolicy nested stacks overcome the 500 Resource Limi of one stack modular templates ... code reuse make the installation process easier ..nested stack created by the root stack :rotating_light: use only when everything is lifecycle linked cross-stack references outputs are normally not visible from other stacks nested references can reference them.. outputs are exported .. making them visible from other stacks Exports must have a unique name in the region Fn::ImportValue can be used instead of Ref stack sets deploy CFN stacks across many accounts & regions StackSets are containers in an admin account ...contain stack instances .. which reference stacks Stack instances & stacks are in target accounts Each stack = 1 region in 1 account :rotating_light: Security = self-managed or sevice-managed keys and concepts concurrent accounts - more conncurent account=>faster the deployment failure tolerance - no. of failed individual stacks to determine the whole set to be failed retain stacks - to retain stack in aws account when the set it deleted scenarios Enable AWS Config AWS Config Rules - MFA, EIPS, EBS Encryption Create IAM Roles for cross-account access deletion policy DeletionPolicy By default, resources associated with CFT is deleted when the templete is deleted = which can cause data loss Delete (Default), Retain or (if supported) Snapshot Snapshot supported by EBS volume, ElastiCache, Neptune, RDS, Redshift Snapshots continue on pst Stack lifetime - you have to clean up ($$) ONLY APPLIES TO DELETE .. NOT REPLACE when resource is deleted from the template and cft is redeployed when the whole template is deleted stack roles CFN uses the permissions of the logged in identity requires permissions for AWS CFN can assume a role to gain the permission Lets you implement role seperation The identity creating the stack only need PassRole and doesnot need resource permissions CloudFormationInit & cnf-init Simple configuration management system Configuration directives stored in template AWS::CloudFormation::Init part of logical resource Procedural - HOW (User Data) ... vs WHAT (cfn-init) - idompotent cnf-init helper script - installed on EC2 OS (make it so) cnf-hup cfn-hup helper is a daemon which can be installed .. it detects changes in resource metadata .. running configurable actions when a change is detected . UpdateStack => update config on EC2 instances ChangeSets Change Sets let you preview changes ( A Change Set ) ..multiple different versions for a stakc (lots of change sets) Chosen changes can be applied by executing the change set CustomResources logical resources in a tempalte create, update and delete physical resources","title":"AWS cloudformation"},{"location":"cloudfront/cloudfront/","text":"CloudFront CloudFront is a Content Delivery network (CDN) within AWS. - higher latencies and slow transfer speeds (customers across the globe) - solve by using caching and efficient global network Terms Origin - S3 origin or custom origin (publicly routable IP address) Distribution - configuration unit of CloudFront can have multiple origins configured Edge Location - Local cache of your data smaller than regions - 200 edge locations Regional Edge Cache only used by custom origin NOT S3 origin larger version of edge location. Provides another provides another layer of caching Cache Behavior Default ( ) - path-pattern * trusted signers/groups for private To delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty CacheBehaviors element. https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_CacheBehavior.html TTL more frquent cache HITS == lower orign load Default TTL (defined in the behavior) == 24 hrs (validity period) Minimum TTL and Maximum TTL - default applies if not specified limits the object level TTL values Origin Header: Cache-Control max-age (seconds) Origin Header: Cache-Control s-maxage (seconds) Origin Header: Expires (Date & Time) Headers can be set using custom origin or s3 origin (via object metadata) Invalidations (cache) Cache invalidation - performed on a distribution applies to all edge locations - process takes time Examples of cache invalidations - correct errors /images/whiskers1.png /images/whiskers* /images/* /* Versioned file names .. file_v1/file_v2/file_v3 avaoid caching issues - names are different logging is more clear no frequent cached invalidations SSL CloudFront Default Domain Name (CNAME) ex - https://random.cloudfront.net/ SSL supported by default ... *.clodufront.net cert Alternate Domain Names (CNAMES) ex- cdn.something.com verify ownership (optionally HTTPS) using a matching certificate generate or import certs in ACM add certficate in us-east-1 for global service like CloudFront Cloudfront to allow on one of the options: HTTP or HTTPS, HTTP => HTTPS, HTTPS Only Two SSL connections Viewer => CloudFront & CloudFront => Origin both need valid public certificates (intermediate certs) SNI - Server Name Indication SNI is a TLS extension, allowing a host to be included -- free of cost host header routing ->> allows multiple hosts/certs behind a single IP old browsers don't support SNI .. CF charges extra for dedicated IP ($600) Origin Types an Architecture Origins aws s3 aws media package channel endpoints aws media storage container endpoints everything else (custom origin) -- web servers Custom origin options: SSL protocol - TLS certs origin id, domain name, path origin protocol custom ports custom headers connection configuration Caching Peformance & Optimization CACHE HIT = object returned from cache CACHE MISS = object returned from origin Headers, Cookies and Query String Parameters can be configured to be forwarded to the origin or not Forward what the application needs Cache based on what can change the objects The more things are involved in caching - the less efficient Origin Access Identity (OAI) - S3 Origin applicable to S3 type of identity assocaited with Cloudfont Distribution CloudFront 'becomes' that OAI OAI can be used in the s3 bucket policies DENY all but ALLOW one or more OAI's in bucket policy Securing Custom origins custom origin to require some custom headers custom headers are injected within the cloudfront custom origin to host behind firewall which allows only public IP ranges of cloudfront Private Distributions Public - open access to objects Private ... requests required signed Cookie or URL 1 behavior --> whole distribution PUBLIC or PRIVATE Multiple behaviors - combination of PUBLIC and PRIVATE CloudFront Key created by root account user and tied to a specific AWS account account with cloudfront key can be added as TRUSTED SIGNER will require signed cookie/url Signed URL provides access to one object Legcy RTMP distributions cant use cookies use URL's if the client does not support cookies Signed Cookies Use for groups of files/ all files of a type - .jpeg maintain the URL with signed cookies CloudFront Geo Restriction CF Geo REstriction 3rd party Geolocation Whitelist or Blacklist - COUNTRY ONLY completely customizable GeoIP Database 99.8%+ Accurate more accurate - can be filter on many attributesc applies to the entire distribution CloudFront Field-Level Encryption Client <==> Origin can be encrypted using HTTPS data transmitted within is treated like any other plain data Field Level encryption happens at the edge happens separately from the HTTPS Tunnel using public/private key private key is needed to decrypt individual fields Lambda@Edge run lightweight lambda at edge locations adjust data between the viewer and origin only supports node.js and python runs in the AWS public space --> cannot access any VPC resource lambda layers not supported different limits than normal lambda function Use Cases A/B testing - Viewer Request Migration between s3 oriigns - Origin Request Different Objects based on Device - Origin Request Content By Country - Origin Request ElasticCache in-memory database .. high performance managed redis and memcached -- as a service can be used to cache data - for READ HEAVY workloads with low latency requirements Reduces database workloads (expensive) Can be used to store Session Data (Stateless Servers) requires application code changes Memcached Redis simple data structure - string advance structure- list, sets, sorted lists, bit-arrays No replication Multi-AZ Mulitple Nodes(Sharding) Replication(Scale Reads) No backups Backup & Restore Multi-threaded Transactions","title":"Cloudfront"},{"location":"cloudfront/cloudfront/#cloudfront","text":"CloudFront is a Content Delivery network (CDN) within AWS. - higher latencies and slow transfer speeds (customers across the globe) - solve by using caching and efficient global network","title":"CloudFront"},{"location":"cloudfront/cloudfront/#terms","text":"Origin - S3 origin or custom origin (publicly routable IP address) Distribution - configuration unit of CloudFront can have multiple origins configured Edge Location - Local cache of your data smaller than regions - 200 edge locations Regional Edge Cache only used by custom origin NOT S3 origin larger version of edge location. Provides another provides another layer of caching","title":"Terms"},{"location":"cloudfront/cloudfront/#cache-behavior","text":"Default ( ) - path-pattern * trusted signers/groups for private To delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty CacheBehaviors element. https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_CacheBehavior.html","title":"Cache Behavior"},{"location":"cloudfront/cloudfront/#ttl","text":"more frquent cache HITS == lower orign load Default TTL (defined in the behavior) == 24 hrs (validity period) Minimum TTL and Maximum TTL - default applies if not specified limits the object level TTL values Origin Header: Cache-Control max-age (seconds) Origin Header: Cache-Control s-maxage (seconds) Origin Header: Expires (Date & Time) Headers can be set using custom origin or s3 origin (via object metadata)","title":"TTL"},{"location":"cloudfront/cloudfront/#invalidations-cache","text":"Cache invalidation - performed on a distribution applies to all edge locations - process takes time Examples of cache invalidations - correct errors /images/whiskers1.png /images/whiskers* /images/* /* Versioned file names .. file_v1/file_v2/file_v3 avaoid caching issues - names are different logging is more clear no frequent cached invalidations","title":"Invalidations (cache)"},{"location":"cloudfront/cloudfront/#ssl","text":"CloudFront Default Domain Name (CNAME) ex - https://random.cloudfront.net/ SSL supported by default ... *.clodufront.net cert Alternate Domain Names (CNAMES) ex- cdn.something.com verify ownership (optionally HTTPS) using a matching certificate generate or import certs in ACM add certficate in us-east-1 for global service like CloudFront Cloudfront to allow on one of the options: HTTP or HTTPS, HTTP => HTTPS, HTTPS Only Two SSL connections Viewer => CloudFront & CloudFront => Origin both need valid public certificates (intermediate certs)","title":"SSL"},{"location":"cloudfront/cloudfront/#sni-server-name-indication","text":"SNI is a TLS extension, allowing a host to be included -- free of cost host header routing ->> allows multiple hosts/certs behind a single IP old browsers don't support SNI .. CF charges extra for dedicated IP ($600)","title":"SNI - Server Name Indication"},{"location":"cloudfront/cloudfront/#origin-types-an-architecture","text":"Origins aws s3 aws media package channel endpoints aws media storage container endpoints everything else (custom origin) -- web servers Custom origin options: SSL protocol - TLS certs origin id, domain name, path origin protocol custom ports custom headers connection configuration","title":"Origin Types an Architecture"},{"location":"cloudfront/cloudfront/#caching-peformance-optimization","text":"CACHE HIT = object returned from cache CACHE MISS = object returned from origin Headers, Cookies and Query String Parameters can be configured to be forwarded to the origin or not Forward what the application needs Cache based on what can change the objects The more things are involved in caching - the less efficient","title":"Caching Peformance &amp; Optimization"},{"location":"cloudfront/cloudfront/#origin-access-identity-oai-s3-origin","text":"applicable to S3 type of identity assocaited with Cloudfont Distribution CloudFront 'becomes' that OAI OAI can be used in the s3 bucket policies DENY all but ALLOW one or more OAI's in bucket policy","title":"Origin Access Identity (OAI) - S3 Origin"},{"location":"cloudfront/cloudfront/#securing-custom-origins","text":"custom origin to require some custom headers custom headers are injected within the cloudfront custom origin to host behind firewall which allows only public IP ranges of cloudfront","title":"Securing Custom origins"},{"location":"cloudfront/cloudfront/#private-distributions","text":"Public - open access to objects Private ... requests required signed Cookie or URL 1 behavior --> whole distribution PUBLIC or PRIVATE Multiple behaviors - combination of PUBLIC and PRIVATE CloudFront Key created by root account user and tied to a specific AWS account account with cloudfront key can be added as TRUSTED SIGNER will require signed cookie/url Signed URL provides access to one object Legcy RTMP distributions cant use cookies use URL's if the client does not support cookies Signed Cookies Use for groups of files/ all files of a type - .jpeg maintain the URL with signed cookies","title":"Private Distributions"},{"location":"cloudfront/cloudfront/#cloudfront-geo-restriction","text":"CF Geo REstriction 3rd party Geolocation Whitelist or Blacklist - COUNTRY ONLY completely customizable GeoIP Database 99.8%+ Accurate more accurate - can be filter on many attributesc applies to the entire distribution","title":"CloudFront Geo Restriction"},{"location":"cloudfront/cloudfront/#cloudfront-field-level-encryption","text":"Client <==> Origin can be encrypted using HTTPS data transmitted within is treated like any other plain data Field Level encryption happens at the edge happens separately from the HTTPS Tunnel using public/private key private key is needed to decrypt individual fields","title":"CloudFront Field-Level Encryption"},{"location":"cloudfront/cloudfront/#lambdaedge","text":"run lightweight lambda at edge locations adjust data between the viewer and origin only supports node.js and python runs in the AWS public space --> cannot access any VPC resource lambda layers not supported different limits than normal lambda function Use Cases A/B testing - Viewer Request Migration between s3 oriigns - Origin Request Different Objects based on Device - Origin Request Content By Country - Origin Request","title":"Lambda@Edge"},{"location":"cloudfront/cloudfront/#elasticcache","text":"in-memory database .. high performance managed redis and memcached -- as a service can be used to cache data - for READ HEAVY workloads with low latency requirements Reduces database workloads (expensive) Can be used to store Session Data (Stateless Servers) requires application code changes Memcached Redis simple data structure - string advance structure- list, sets, sorted lists, bit-arrays No replication Multi-AZ Mulitple Nodes(Sharding) Replication(Scale Reads) No backups Backup & Restore Multi-threaded Transactions","title":"ElasticCache"},{"location":"deployment/ci-cd/","text":"CICD Continuous Integration and Continuous Delivery AWS CodeCommit similar to gihub authentication - iam user authorization - iam identity policy notifications - on events triggers - on events AWS CodePipeline CD tool Orchestration tool for code, build, test and deploy controls the flow from source through build and deployment Pipelines are built form STAGES STAGES can have sequential or parallel ACTIONS Movement between stages can require manual approval Artifacts can be loaded into an action , and generated from an action Stage Changes => Event Bridge (eg. success, failed, cancelled) CloudTrail or Console UI to view/interact AWS CodeBuild Code Build as a service - fully managed Pay for the resource consumed during builds Alternate to part of jenkins functionality Used for builds and tests Uses docker for build environment, can be customized Integrates with AWS Services : KMS,IAM, VPC, CloudTrail, S3... Sourced from -> Github or CodeCommit or CodePipeline or S3 Customised via buildspec.yml file (root of source) Logs => CloudWatch, S3 Metrics => CloudWatch Events => EventBridge (event-driven response) supported languages - java,ruby,python,go,.net,php,node.js PHASES install - install packages in build environment pre_build - sign-in or install dependencies build - commands for the build process post_build - package things up, push docker image, explicit notifications also support environment variables - shell, variables, parameter-store, secrets-manager artifacts - where to put AWS CodeDeploy Code Deployment as a service Alternatives - jenkins, ansible, chef, puppet, cloudformation Deploy code.. not resources Deploys to EC2, On-premises, Lambda and ECS Also deploys web, configuration, EXE files, Packages, Scripts, media and more .. CodeDeploy integrates with AWS services and AWS Code* tools For On-premise and EC2 - Codedeploy agent needs to be installed Appsec.yml - yaml or json reference link Files (EC2/On-premise) Permissions (EC2/On-premise) Resources (ECS/Lambda) Hooks (ECS/Lambda/EC2/On-premise) - reference link Lifecycle hooks are different for each type of deployments.","title":"CICD"},{"location":"deployment/ci-cd/#cicd","text":"Continuous Integration and Continuous Delivery","title":"CICD"},{"location":"deployment/ci-cd/#aws-codecommit","text":"similar to gihub authentication - iam user authorization - iam identity policy notifications - on events triggers - on events","title":"AWS CodeCommit"},{"location":"deployment/ci-cd/#aws-codepipeline","text":"CD tool Orchestration tool for code, build, test and deploy controls the flow from source through build and deployment Pipelines are built form STAGES STAGES can have sequential or parallel ACTIONS Movement between stages can require manual approval Artifacts can be loaded into an action , and generated from an action Stage Changes => Event Bridge (eg. success, failed, cancelled) CloudTrail or Console UI to view/interact","title":"AWS CodePipeline"},{"location":"deployment/ci-cd/#aws-codebuild","text":"Code Build as a service - fully managed Pay for the resource consumed during builds Alternate to part of jenkins functionality Used for builds and tests Uses docker for build environment, can be customized Integrates with AWS Services : KMS,IAM, VPC, CloudTrail, S3... Sourced from -> Github or CodeCommit or CodePipeline or S3 Customised via buildspec.yml file (root of source) Logs => CloudWatch, S3 Metrics => CloudWatch Events => EventBridge (event-driven response) supported languages - java,ruby,python,go,.net,php,node.js PHASES install - install packages in build environment pre_build - sign-in or install dependencies build - commands for the build process post_build - package things up, push docker image, explicit notifications also support environment variables - shell, variables, parameter-store, secrets-manager artifacts - where to put","title":"AWS CodeBuild"},{"location":"deployment/ci-cd/#aws-codedeploy","text":"Code Deployment as a service Alternatives - jenkins, ansible, chef, puppet, cloudformation Deploy code.. not resources Deploys to EC2, On-premises, Lambda and ECS Also deploys web, configuration, EXE files, Packages, Scripts, media and more .. CodeDeploy integrates with AWS services and AWS Code* tools For On-premise and EC2 - Codedeploy agent needs to be installed Appsec.yml - yaml or json reference link Files (EC2/On-premise) Permissions (EC2/On-premise) Resources (ECS/Lambda) Hooks (ECS/Lambda/EC2/On-premise) - reference link Lifecycle hooks are different for each type of deployments.","title":"AWS CodeDeploy"},{"location":"deployment/elasic-beanstalk/","text":"Elastic Beanstalk PaaS - Platform as a service Developer Focused - not end user Great for smaller development teams High level - Managed Application Environment User Provide code and EB handles the environment Focus on code, low infrastructure overhead Fully customisable - uses AWS products under the covers Requires application changes .. does not come for free Databases OUTSIDE of Elastic BeanStalk DB in env are lost if env is deleted ### EB - Platforms - Built-in languages - Go, java, java + tomcat, .NET Core(linux) & .NET (Windows) - nodejs, python, pho, ruby - Docker - single container docker - multi container docker (ECS behind the scene) - preconfigured docker for unsupported runtime (glassfish java8) - Cutom - use packer to create custom platform EB - Application Collection of things relating to an application Versions of application is stored in S3 and sourcable (zip or war) Environments containers of infrastructure running a specific versions each environment has it own CNAME CNAME Swap to enable blue/green deployment web server tier - usually service traffic from load balancers worker tier - processing requests from queue like SQS EB - Deployment Policies All at once - deploy to all at once, brief outage Rolling - deploy in rolling batches Rolling with additional batch - as above, with new batch to maintain capacity during the process 150 % of capacity depending on the configuration both versions serving traffic at one point Immutable - all new instances with new version create another set of ASG delete the old ASG Traffic Splitting - fresh instances, with a traffic split (A/B testing) EB and RDS RDS provisioned with EB is associated with EB and will be deleted once EB environment is deleted. Different data in different environment (different RDS) environment properties: RDS_HOSTNAME , RDS_PORT , RDS_DB_NAME , RDS_USERNAME , RDS_PASSWORD RDS provisioned outside EB should configure above properties as environemnt variables Steps to decouple exsiting RDS create snapshot of RDS enable termination protection create another EB environment with same verison without RDS ensure the EB new environment can connect to RDS make the CNAME switch from old to new environment delete the old EB environment clean up the failed cloudformation stack and retain the RDS created via CFN stack EB customisation link to extensions files extension folder - .ebextensions config file (yaml or json) ends with .config EB & HTTPS apply SSL cert to the load balancer directly via EB console OR apply via .ebextensions/securelistener-[alb][nlb].config option_settings: aws:elbv2:listener:443: ListernerEnabled: 'true' Protocol: HTTPS SSLCertificateArns: arn:.... EB cloning Clone an existing env to another Update the new env once the cloning is complete RDS data is not copied during cloning Changes outside the EB will not be copied EB and Docker Single container application Dockerfile docker-compose Mutiple container applications ECS cluster EC2 instances provisioned in the cluster and ELB for HA Dockerrun.aws.json (V2) file in root of application source code Docker image will have to be stored in docker registry like ECR","title":"Elasic beanstalk"},{"location":"deployment/elasic-beanstalk/#elastic-beanstalk","text":"PaaS - Platform as a service Developer Focused - not end user Great for smaller development teams High level - Managed Application Environment User Provide code and EB handles the environment Focus on code, low infrastructure overhead Fully customisable - uses AWS products under the covers Requires application changes .. does not come for free Databases OUTSIDE of Elastic BeanStalk DB in env are lost if env is deleted ### EB - Platforms - Built-in languages - Go, java, java + tomcat, .NET Core(linux) & .NET (Windows) - nodejs, python, pho, ruby - Docker - single container docker - multi container docker (ECS behind the scene) - preconfigured docker for unsupported runtime (glassfish java8) - Cutom - use packer to create custom platform","title":"Elastic Beanstalk"},{"location":"deployment/elasic-beanstalk/#eb-application","text":"Collection of things relating to an application Versions of application is stored in S3 and sourcable (zip or war) Environments containers of infrastructure running a specific versions each environment has it own CNAME CNAME Swap to enable blue/green deployment web server tier - usually service traffic from load balancers worker tier - processing requests from queue like SQS","title":"EB - Application"},{"location":"deployment/elasic-beanstalk/#eb-deployment-policies","text":"All at once - deploy to all at once, brief outage Rolling - deploy in rolling batches Rolling with additional batch - as above, with new batch to maintain capacity during the process 150 % of capacity depending on the configuration both versions serving traffic at one point Immutable - all new instances with new version create another set of ASG delete the old ASG Traffic Splitting - fresh instances, with a traffic split (A/B testing)","title":"EB - Deployment Policies"},{"location":"deployment/elasic-beanstalk/#eb-and-rds","text":"RDS provisioned with EB is associated with EB and will be deleted once EB environment is deleted. Different data in different environment (different RDS) environment properties: RDS_HOSTNAME , RDS_PORT , RDS_DB_NAME , RDS_USERNAME , RDS_PASSWORD RDS provisioned outside EB should configure above properties as environemnt variables Steps to decouple exsiting RDS create snapshot of RDS enable termination protection create another EB environment with same verison without RDS ensure the EB new environment can connect to RDS make the CNAME switch from old to new environment delete the old EB environment clean up the failed cloudformation stack and retain the RDS created via CFN stack","title":"EB and RDS"},{"location":"deployment/elasic-beanstalk/#eb-customisation","text":"link to extensions files extension folder - .ebextensions config file (yaml or json) ends with .config","title":"EB customisation"},{"location":"deployment/elasic-beanstalk/#eb-https","text":"apply SSL cert to the load balancer directly via EB console OR apply via .ebextensions/securelistener-[alb][nlb].config option_settings: aws:elbv2:listener:443: ListernerEnabled: 'true' Protocol: HTTPS SSLCertificateArns: arn:....","title":"EB &amp; HTTPS"},{"location":"deployment/elasic-beanstalk/#eb-cloning","text":"Clone an existing env to another Update the new env once the cloning is complete RDS data is not copied during cloning Changes outside the EB will not be copied","title":"EB cloning"},{"location":"deployment/elasic-beanstalk/#eb-and-docker","text":"Single container application Dockerfile docker-compose Mutiple container applications ECS cluster EC2 instances provisioned in the cluster and ELB for HA Dockerrun.aws.json (V2) file in root of application source code Docker image will have to be stored in docker registry like ECR","title":"EB and Docker"},{"location":"deployment/opsworks/","text":"AWS OpsWorks AWS OpsWorks provides managed implementations of Puppet and Chef in a product which integrates with other AWS Products and services. 3 Modes Puppet Enterprise - AWS Managed Puppet Master Server desired state of the infra Chef Automate - AWS Managed Chef Servers infra as code with ruby Opsworks - AWS Integrated Chef, No Servers Use when you already have one of them Requirement to automate... (suitable for infra engineer) Key terms to lookout for => Recipes, Cookbook or Manifests Terms Stacks - Core Component : container of resources Layers - each layer is a specific function within a stack Recipes & Cookbooks Lifecycle Events - Setup, Configure, Deploy, Undeploy and Shutdown Instances - EC2/On-premise 24/7 time-based load-based Apps","title":"Opsworks"},{"location":"deployment/opsworks/#aws-opsworks","text":"AWS OpsWorks provides managed implementations of Puppet and Chef in a product which integrates with other AWS Products and services. 3 Modes Puppet Enterprise - AWS Managed Puppet Master Server desired state of the infra Chef Automate - AWS Managed Chef Servers infra as code with ruby Opsworks - AWS Integrated Chef, No Servers Use when you already have one of them Requirement to automate... (suitable for infra engineer) Key terms to lookout for => Recipes, Cookbook or Manifests","title":"AWS OpsWorks"},{"location":"deployment/opsworks/#terms","text":"Stacks - Core Component : container of resources Layers - each layer is a specific function within a stack Recipes & Cookbooks Lifecycle Events - Setup, Configure, Deploy, Undeploy and Shutdown Instances - EC2/On-premise 24/7 time-based load-based Apps","title":"Terms"},{"location":"deployment/systems-manager/","text":"AWS Systems Manager Agent View and control AWS and on-premises infrastructure Agent based - installed on windows and Linux AWS AMI's Manage Inventory & Patch Assets Run commands & Managed Desired State Parameter Store .. configuration and secrets Securely connect to EC2. even in private VPCs Run Command Systems Manager Run Command is a foundational feature of Systems manager which allows for commands to be executed on managed instances at scale . AWS Systems Manager documents Run command documents on managed instances No SSH/RDP Access Required Instances , Tags or Resource Groups Command documents can be reused and can have parameters Rate Control - Concurrency & Error Threshold Output Options - S3 and SNS Target of an EventBridge rule Patch Manager Systems Manager Patch Manager allows for the patching of windows or linux managed instances running in AWS or on-premises . Concepts - Patch Baseline - Patch Groups - Maintenance Windows - Run Command - Concurrency & Error Threshold - Compliance Patch Baseline - Predefined Patch Baselines - Various OS (you can also create your own) - Linux - AWS-[ OS ]DefaultPatchBaseline, expliitly define patches - AWS- AmazonLinux2 DefaultPatchBaseline - AWS- Ubuntu DefaultPatchBaseline - Windows - AWSDefaultPatchBaseline - Critical and Security Updates - AWS-WindowsPredefinedPatchBaseline-OS - same as above - AWS-WindowsPredefinedPatchBaseline-OS-Applications - +MS App Updates Patch Manager - hybrid activations - generates activation code and id for on-premise isntances - Patch Manager will pick the baseline of patch group if an insance is registered to a patch group else it will pick the default for the instance. Missing 5 = Systems Manager inventory for checking the desired state of instances.","title":"Systems manager"},{"location":"deployment/systems-manager/#aws-systems-manager","text":"","title":"AWS Systems Manager"},{"location":"deployment/systems-manager/#agent","text":"View and control AWS and on-premises infrastructure Agent based - installed on windows and Linux AWS AMI's Manage Inventory & Patch Assets Run commands & Managed Desired State Parameter Store .. configuration and secrets Securely connect to EC2. even in private VPCs","title":"Agent"},{"location":"deployment/systems-manager/#run-command","text":"Systems Manager Run Command is a foundational feature of Systems manager which allows for commands to be executed on managed instances at scale . AWS Systems Manager documents Run command documents on managed instances No SSH/RDP Access Required Instances , Tags or Resource Groups Command documents can be reused and can have parameters Rate Control - Concurrency & Error Threshold Output Options - S3 and SNS Target of an EventBridge rule","title":"Run Command"},{"location":"deployment/systems-manager/#patch-manager","text":"Systems Manager Patch Manager allows for the patching of windows or linux managed instances running in AWS or on-premises . Concepts - Patch Baseline - Patch Groups - Maintenance Windows - Run Command - Concurrency & Error Threshold - Compliance Patch Baseline - Predefined Patch Baselines - Various OS (you can also create your own) - Linux - AWS-[ OS ]DefaultPatchBaseline, expliitly define patches - AWS- AmazonLinux2 DefaultPatchBaseline - AWS- Ubuntu DefaultPatchBaseline - Windows - AWSDefaultPatchBaseline - Critical and Security Updates - AWS-WindowsPredefinedPatchBaseline-OS - same as above - AWS-WindowsPredefinedPatchBaseline-OS-Applications - +MS App Updates Patch Manager - hybrid activations - generates activation code and id for on-premise isntances - Patch Manager will pick the baseline of patch group if an insance is registered to a patch group else it will pick the default for the instance. Missing 5 = Systems Manager inventory for checking the desired state of instances.","title":"Patch Manager"},{"location":"dr-bc/dr-bc-architecture/","text":"Overview Efffective DR/BC costs money all of the time Need extra resource (backup or standby resources) Executing a DR/BC process takes time Cost Trade Off: Faster to Recover - more costilier Backup and Restore Have backups in place -- in an event of disaster restore them in different site/location Cost effective but will takes longer to restore in case disaster happens Pilot Light Secondary environment with bare minimum set up for faster recovery auto sync data for Databases which are ready to use provisioned but stopped instances Warm Standby Standby secondary site running the fully functional version of primary infra but with less resources and size. cheaper instance type lower no. of intances in ASG can be upgraded/updated when failover is required Little costlier than pilot light ( cheaper than active/active ) but faster to recover in case of disaster Active/Active Have exact and fully functional version of primary infrastructure running in secondary site/location The most costliest ( 200% ) set-up but does not require recovery during disaster event Since both sites run fully functional apps, they can be load balanced as well provides better performance and improves HA","title":"DR Architecture"},{"location":"dr-bc/dr-bc-architecture/#overview","text":"Efffective DR/BC costs money all of the time Need extra resource (backup or standby resources) Executing a DR/BC process takes time Cost Trade Off: Faster to Recover - more costilier","title":"Overview"},{"location":"dr-bc/dr-bc-architecture/#backup-and-restore","text":"Have backups in place -- in an event of disaster restore them in different site/location Cost effective but will takes longer to restore in case disaster happens","title":"Backup and Restore"},{"location":"dr-bc/dr-bc-architecture/#pilot-light","text":"Secondary environment with bare minimum set up for faster recovery auto sync data for Databases which are ready to use provisioned but stopped instances","title":"Pilot Light"},{"location":"dr-bc/dr-bc-architecture/#warm-standby","text":"Standby secondary site running the fully functional version of primary infra but with less resources and size. cheaper instance type lower no. of intances in ASG can be upgraded/updated when failover is required Little costlier than pilot light ( cheaper than active/active ) but faster to recover in case of disaster","title":"Warm Standby"},{"location":"dr-bc/dr-bc-architecture/#activeactive","text":"Have exact and fully functional version of primary infrastructure running in secondary site/location The most costliest ( 200% ) set-up but does not require recovery during disaster event Since both sites run fully functional apps, they can be load balanced as well provides better performance and improves HA","title":"Active/Active"},{"location":"dr-bc/dr-compute/","text":"Overview NO truly global compute services in AWS EC2 Always assume it can be shutdown or replaced EC2 host fails in one AZ reattach EBS to new instance Run EC2 instances with ASG in multiple AZs ASG will launch EC2 instances in case of instance failures ECS EC2 mode or Fargate mode EC2 mode underlying ec2 instances fails -> containers fail underlying ec2 can be run in ASG with multiple AZ to tolerate AZ failure Fargate mode underlying ec2s managed by AWS fails -> containers fail spread the containers across multiple AZ with configuration Lambda Stateless VPC lambda function ENIs per subnet in the VPC to launch in any subnets Public lambda function can be launched from any AZs Lambda Service is impated when there is a region failure","title":"DR Compute"},{"location":"dr-bc/dr-compute/#overview","text":"NO truly global compute services in AWS","title":"Overview"},{"location":"dr-bc/dr-compute/#ec2","text":"Always assume it can be shutdown or replaced EC2 host fails in one AZ reattach EBS to new instance Run EC2 instances with ASG in multiple AZs ASG will launch EC2 instances in case of instance failures","title":"EC2"},{"location":"dr-bc/dr-compute/#ecs","text":"EC2 mode or Fargate mode EC2 mode underlying ec2 instances fails -> containers fail underlying ec2 can be run in ASG with multiple AZ to tolerate AZ failure Fargate mode underlying ec2s managed by AWS fails -> containers fail spread the containers across multiple AZ with configuration","title":"ECS"},{"location":"dr-bc/dr-compute/#lambda","text":"Stateless VPC lambda function ENIs per subnet in the VPC to launch in any subnets Public lambda function can be launched from any AZs Lambda Service is impated when there is a region failure","title":"Lambda"},{"location":"dr-bc/dr-database/","text":"Regional Overview DB running in EC2 Running DB in EC2 instances will not provide HA or resiliency EC2 and EBS - single AZ product by themselves RDS Runs in subnet group which spans over mutliple AZs Primary instance with standby instance in different AZ Synchcronous replication between primary and standby instances Failover happens when primary instance goes down and standy becomes primary Both primary and standby has to be down from multi-AZ failure to cause complete failure in the region Aurora Can handle multi AZ failures Volume(virtual database storage) runs in cluster mode which spans multiple AZ Both primary (also write) and replicas read from same cluster volume upto 15 read-only replicas failover process is automated if primary instance goes down Only region failover would significantly impact service DynamodDB Replcations between multiple nodes in mutliple AZs Fails when the region goes down Global Overview DynamoDB Global Tables Default dynamoDB table located in single region Global Table provides multi master replications between regional replicas last write wins replication method Same region write - strongly consistent read | Alternate region - eventual consistency read Aurora Global Databases Read/Write cluster in one region and Read cluster in different regions read cluster can be promoted to read/write cluster Storage level replication - 1s lag NON multi master RDS cross-region replication Cross Region Read Replica Asynchronous Replication - lag could be longer compared to aurora","title":"DR Database"},{"location":"dr-bc/dr-database/#regional","text":"","title":"Regional"},{"location":"dr-bc/dr-database/#overview","text":"","title":"Overview"},{"location":"dr-bc/dr-database/#db-running-in-ec2","text":"Running DB in EC2 instances will not provide HA or resiliency EC2 and EBS - single AZ product by themselves","title":"DB running in EC2"},{"location":"dr-bc/dr-database/#rds","text":"Runs in subnet group which spans over mutliple AZs Primary instance with standby instance in different AZ Synchcronous replication between primary and standby instances Failover happens when primary instance goes down and standy becomes primary Both primary and standby has to be down from multi-AZ failure to cause complete failure in the region","title":"RDS"},{"location":"dr-bc/dr-database/#aurora","text":"Can handle multi AZ failures Volume(virtual database storage) runs in cluster mode which spans multiple AZ Both primary (also write) and replicas read from same cluster volume upto 15 read-only replicas failover process is automated if primary instance goes down Only region failover would significantly impact service","title":"Aurora"},{"location":"dr-bc/dr-database/#dynamoddb","text":"Replcations between multiple nodes in mutliple AZs Fails when the region goes down","title":"DynamodDB"},{"location":"dr-bc/dr-database/#global","text":"","title":"Global"},{"location":"dr-bc/dr-database/#overview_1","text":"","title":"Overview"},{"location":"dr-bc/dr-database/#dynamodb-global-tables","text":"Default dynamoDB table located in single region Global Table provides multi master replications between regional replicas last write wins replication method Same region write - strongly consistent read | Alternate region - eventual consistency read","title":"DynamoDB Global Tables"},{"location":"dr-bc/dr-database/#aurora-global-databases","text":"Read/Write cluster in one region and Read cluster in different regions read cluster can be promoted to read/write cluster Storage level replication - 1s lag NON multi master","title":"Aurora Global Databases"},{"location":"dr-bc/dr-database/#rds-cross-region-replication","text":"Cross Region Read Replica Asynchronous Replication - lag could be longer compared to aurora","title":"RDS cross-region replication"},{"location":"dr-bc/dr-networking/","text":"Regional Public services like SNS and S3 operate from all AZs - only region failure would cause service failure VPC VPC - regionallly resilient along with IGW and VPC Router can withstand AZ failure only fails when region fails Subnet - AZ failure will also cause subnet failure nat gateway fails when AZ fails Interface Endpoint - AZ failure will also cause interface endpoint failure deploy multiple VPCE for regional HA Load Balancer Consists of LB nodes in 2+ AZs - regionally resilient as long as one node is functional, LB is functional Can withstand AZ failure only fails when entire region fails Global Network Route53 Global Service Route53 to point to services in mulitple regions provide global discoverability and resilience configuration to not route to unhealhty region (regional health check)","title":"DR Networking"},{"location":"dr-bc/dr-networking/#regional","text":"Public services like SNS and S3 operate from all AZs - only region failure would cause service failure","title":"Regional"},{"location":"dr-bc/dr-networking/#vpc","text":"VPC - regionallly resilient along with IGW and VPC Router can withstand AZ failure only fails when region fails Subnet - AZ failure will also cause subnet failure nat gateway fails when AZ fails Interface Endpoint - AZ failure will also cause interface endpoint failure deploy multiple VPCE for regional HA","title":"VPC"},{"location":"dr-bc/dr-networking/#load-balancer","text":"Consists of LB nodes in 2+ AZs - regionally resilient as long as one node is functional, LB is functional Can withstand AZ failure only fails when entire region fails","title":"Load Balancer"},{"location":"dr-bc/dr-networking/#global-network","text":"","title":"Global Network"},{"location":"dr-bc/dr-networking/#route53","text":"Global Service Route53 to point to services in mulitple regions provide global discoverability and resilience configuration to not route to unhealhty region (regional health check)","title":"Route53"},{"location":"dr-bc/dr-storage/","text":"Overview Instance Store Volumes Attached with EC2 and no recovery in case of failure - temporary solution Fails when .. hardware fails AZ fails EC2 host fails EBS - Elastic Block Storage Runs in one AZ No replication of data from one AZ to another Fails when .. AZ fails Snapshots of EBS volume can be stored in S3 but those snapshots can be used directly restore by creating new volume in different AZ if required S3 Replication runs in 3 AZs One Zone storage class does not replicate beyond one AZ but cheaper Snapshots stored in s3 gets regional resilience Snapshots shared and copy across multiple S3 buckets across multiple regions Cross-Region Replication EFS - Elastic File System Replicated accross multiple AZs mounted to Linux ec2 Fails when.. Region fails","title":"DR Storage"},{"location":"dr-bc/dr-storage/#overview","text":"","title":"Overview"},{"location":"dr-bc/dr-storage/#instance-store-volumes","text":"Attached with EC2 and no recovery in case of failure - temporary solution Fails when .. hardware fails AZ fails EC2 host fails","title":"Instance Store Volumes"},{"location":"dr-bc/dr-storage/#ebs-elastic-block-storage","text":"Runs in one AZ No replication of data from one AZ to another Fails when .. AZ fails Snapshots of EBS volume can be stored in S3 but those snapshots can be used directly restore by creating new volume in different AZ if required","title":"EBS - Elastic Block Storage"},{"location":"dr-bc/dr-storage/#s3","text":"Replication runs in 3 AZs One Zone storage class does not replicate beyond one AZ but cheaper Snapshots stored in s3 gets regional resilience Snapshots shared and copy across multiple S3 buckets across multiple regions Cross-Region Replication","title":"S3"},{"location":"dr-bc/dr-storage/#efs-elastic-file-system","text":"Replicated accross multiple AZs mounted to Linux ec2 Fails when.. Region fails","title":"EFS - Elastic File System"},{"location":"migration/datasync/","text":"AWS DataSync Data Transfer service TO and FROM AWS Use cases Data Migration Achiving cold data Data Protection Data movement for timely in-cloud processing DR/BC - Disaster Recovery/Business continuity ..designed to work at huge scale ( agent ) Retains metadata (e.g. permissions/timestamps ) Built in data validation Key Features Scalable - 10GBps per agent (~100TB per day) Bandwidth Limiters (avoid link saturations) Incremental and scheduled transfer options Compression and encyrption Automatic recovery from transit errors AWS Service Integration - S3, EFS, FSx Support transfering data between one AWS service to another Pay as you use.. per GB cost for data moved Components Task - A job within DataSync, defines what is being synced, how quickly, FROM where TO where Agent - Software to READ and WRITE to on-premise data stores using NFS or SMB Location - every task has two locations FROM and TO. e.g. - NFS, SMB (Server Message Block), EFS, FSx and S3","title":"Datasync"},{"location":"migration/datasync/#aws-datasync","text":"Data Transfer service TO and FROM AWS Use cases Data Migration Achiving cold data Data Protection Data movement for timely in-cloud processing DR/BC - Disaster Recovery/Business continuity ..designed to work at huge scale ( agent ) Retains metadata (e.g. permissions/timestamps ) Built in data validation","title":"AWS DataSync"},{"location":"migration/datasync/#key-features","text":"Scalable - 10GBps per agent (~100TB per day) Bandwidth Limiters (avoid link saturations) Incremental and scheduled transfer options Compression and encyrption Automatic recovery from transit errors AWS Service Integration - S3, EFS, FSx Support transfering data between one AWS service to another Pay as you use.. per GB cost for data moved","title":"Key Features"},{"location":"migration/datasync/#components","text":"Task - A job within DataSync, defines what is being synced, how quickly, FROM where TO where Agent - Software to READ and WRITE to on-premise data stores using NFS or SMB Location - every task has two locations FROM and TO. e.g. - NFS, SMB (Server Message Block), EFS, FSx and S3","title":"Components"},{"location":"migration/migration-database/","text":"Database Migration Service (DMS) AWS Database Migration Service (AWS DMS) is a cloud service that makes it easy to migrate relational databases, data warehouses, NoSQL databases , and other types of data stores. You can use AWS DMS to migrate your data into the AWS Cloud or between combinations of cloud and on-premises setups. Managed Database Migration Service Runs using a replication instance Source and Destination Endpoints point at .. Source and Target Databases One Endpoint must be on AWS Migraiton Types: Full Load - one off migration of all data Full Load + CDC (change data capture) - also captures ongoing changes in the source DB CDC Only - copy existing data using other native tooling and only apply data changes Does not support schema conversion but ... tool available called Schema Conversion Tool(SCT) assist with Schema Conversion Schema Conversion Tool (SCT) SCT is used when converting one database engine to another .. including DB -> s3 on-premises MSSQL -> RDS MySQL on-premises ORACLE -> Aurora SCT is not used when migrating between DB's of the same type .. On-premise MySQL -> RDS MySQL Works with database types like OLTP DB Types - MySQL, Oracle, MSSQL OLAP - Teradata, Oracle, Vertica, Greenplum DMS & Snowball Larger migrations might be multi-TB in size moving data over takes time and consumes capacity DMS can utilise snowball.. Steps : 1. Use SCT to extract data locally and move to a snowball device (generic fie format) 2. Ship the device back to AWS.They load onto an S3 bucket. 3. DMS migrates from S3 into the target store 4. CDC can capture data changes -> s3 (intermediary) -> write to target DB","title":"Migration database"},{"location":"migration/migration-database/#database-migration-service-dms","text":"AWS Database Migration Service (AWS DMS) is a cloud service that makes it easy to migrate relational databases, data warehouses, NoSQL databases , and other types of data stores. You can use AWS DMS to migrate your data into the AWS Cloud or between combinations of cloud and on-premises setups. Managed Database Migration Service Runs using a replication instance Source and Destination Endpoints point at .. Source and Target Databases One Endpoint must be on AWS Migraiton Types: Full Load - one off migration of all data Full Load + CDC (change data capture) - also captures ongoing changes in the source DB CDC Only - copy existing data using other native tooling and only apply data changes Does not support schema conversion but ... tool available called Schema Conversion Tool(SCT) assist with Schema Conversion","title":"Database Migration Service (DMS)"},{"location":"migration/migration-database/#schema-conversion-tool-sct","text":"SCT is used when converting one database engine to another .. including DB -> s3 on-premises MSSQL -> RDS MySQL on-premises ORACLE -> Aurora SCT is not used when migrating between DB's of the same type .. On-premise MySQL -> RDS MySQL Works with database types like OLTP DB Types - MySQL, Oracle, MSSQL OLAP - Teradata, Oracle, Vertica, Greenplum","title":"Schema Conversion Tool (SCT)"},{"location":"migration/migration-database/#dms-snowball","text":"Larger migrations might be multi-TB in size moving data over takes time and consumes capacity DMS can utilise snowball.. Steps : 1. Use SCT to extract data locally and move to a snowball device (generic fie format) 2. Ship the device back to AWS.They load onto an S3 bucket. 3. DMS migrates from S3 into the target store 4. CDC can capture data changes -> s3 (intermediary) -> write to target DB","title":"DMS &amp; Snowball"},{"location":"migration/migration-virtual-machines/","text":"Applicaiton Discovery Service Discover on-premises infrastructure vms, cpu, memory including utilization Different modes: Agentless (Application Discovery Agentless Connector) ...OVA appliance, integrates with VMWARE - inventory, vm usage measure performance and resource usage - limited to metrics that has been exposed externally Agent Based discovery for in VM data gathering. network, processes, usage, performance more detailed metrics and informations .. dependancies between servers (network activity) Integration with AWS Migraiton Hub and Amazon Athena hub - tracks migration of different types within AWS athena - perform adhoc analysis of data generation Server Migration Service (SMS) AWS Server Migration Service (SMS) is an agentless service which makes it easier and faster for you to migrate thousands of on-premises workloads to AWS. AWS SMS allows you to automate, schedule, and track incremental replications of live server volumes , making it easier for you to coordinate large-scale server migrations. - Migrate whole VM's (OS, Data, Apps .. migrated as is) - Runs on Agentless mode - connector runs as VM on-premise - Integrates with VMWare, Hyper-V and AzureVM only - Import/Export (anothe AWS service) - downtime - Incremental replication of live volumes - Orchestrate multi-server migrations - Creates AMIs which can be used to create EC2 instances - Integrates with AWS Migration Hub","title":"Migration virtual machines"},{"location":"migration/migration-virtual-machines/#applicaiton-discovery-service","text":"Discover on-premises infrastructure vms, cpu, memory including utilization Different modes: Agentless (Application Discovery Agentless Connector) ...OVA appliance, integrates with VMWARE - inventory, vm usage measure performance and resource usage - limited to metrics that has been exposed externally Agent Based discovery for in VM data gathering. network, processes, usage, performance more detailed metrics and informations .. dependancies between servers (network activity) Integration with AWS Migraiton Hub and Amazon Athena hub - tracks migration of different types within AWS athena - perform adhoc analysis of data generation","title":"Applicaiton Discovery Service"},{"location":"migration/migration-virtual-machines/#server-migration-service-sms","text":"AWS Server Migration Service (SMS) is an agentless service which makes it easier and faster for you to migrate thousands of on-premises workloads to AWS. AWS SMS allows you to automate, schedule, and track incremental replications of live server volumes , making it easier for you to coordinate large-scale server migrations. - Migrate whole VM's (OS, Data, Apps .. migrated as is) - Runs on Agentless mode - connector runs as VM on-premise - Integrates with VMWare, Hyper-V and AzureVM only - Import/Export (anothe AWS service) - downtime - Incremental replication of live volumes - Orchestrate multi-server migrations - Creates AMIs which can be used to create EC2 instances - Integrates with AWS Migration Hub","title":"Server Migration Service (SMS)"},{"location":"migration/migration/","text":"6 R's of Cloud Migration https://aws.amazon.com/blogs/enterprise-strategy/6-strategies-for-migrating-applications-to-the-cloud/ Rehosting - Lift and Shift Migrate as it is (App Virtual Machine - EC2, DB => EC2) +Reduced Admin Overhead (IAAS) +Potentially easier to optmise when in AWS Cost savings -- burst instances not taking full advantage of cloud kicking the can down the road VM Import/Export & Server Migration Service Replatforming - Lift and Shift with Optimization like rehosting but with Optimization using RDS instead of self-managed DBs using ELB instead of load balancers using S3 as backup or media storage no real negatives & no world-changing benefits Admin Overhead Reductions, Performance Benefits, more effective backups or Improved HA/FT - high availability & fault tolreant Repurchasing - Move to something new.. SAAS when there is no reason to self-manage USE a XaaS Product Example MS Exchange => Microsoft 365 CRM => Salesforce Payroll => Xero Refactoring/ Re-architecting - Take advantage of cloud reviewing the architecture of an application adopting cloud-native architectures & products Service-Orientated or Microservices APIs, Event-Driven or Serverless Initially very expensive & time consuming best long-term benefits often cheaper much more scalable better HA/FT costs aligned with app usage Retire - Do we even need this ? NO? Dump it Systems are often running for no reason Auditing their usage is often more work than leaving running If you dont need the application --> switch if off Retain - Not worth time/money or is too scary to migrate DO NOTHING Old Application - not worth the move Complex application - leave till later Super critical application - risky Complete the migration - swing back to focus on the left-overs","title":"6R migration"},{"location":"migration/migration/#6-rs-of-cloud-migration","text":"https://aws.amazon.com/blogs/enterprise-strategy/6-strategies-for-migrating-applications-to-the-cloud/","title":"6 R's of Cloud Migration"},{"location":"migration/migration/#rehosting-lift-and-shift","text":"Migrate as it is (App Virtual Machine - EC2, DB => EC2) +Reduced Admin Overhead (IAAS) +Potentially easier to optmise when in AWS Cost savings -- burst instances not taking full advantage of cloud kicking the can down the road VM Import/Export & Server Migration Service","title":"Rehosting - Lift and Shift"},{"location":"migration/migration/#replatforming-lift-and-shift-with-optimization","text":"like rehosting but with Optimization using RDS instead of self-managed DBs using ELB instead of load balancers using S3 as backup or media storage no real negatives & no world-changing benefits Admin Overhead Reductions, Performance Benefits, more effective backups or Improved HA/FT - high availability & fault tolreant","title":"Replatforming - Lift and Shift with Optimization"},{"location":"migration/migration/#repurchasing-move-to-something-new-saas","text":"when there is no reason to self-manage USE a XaaS Product Example MS Exchange => Microsoft 365 CRM => Salesforce Payroll => Xero","title":"Repurchasing - Move to something new.. SAAS"},{"location":"migration/migration/#refactoring-re-architecting-take-advantage-of-cloud","text":"reviewing the architecture of an application adopting cloud-native architectures & products Service-Orientated or Microservices APIs, Event-Driven or Serverless Initially very expensive & time consuming best long-term benefits often cheaper much more scalable better HA/FT costs aligned with app usage","title":"Refactoring/ Re-architecting - Take advantage of cloud"},{"location":"migration/migration/#retire-do-we-even-need-this-no-dump-it","text":"Systems are often running for no reason Auditing their usage is often more work than leaving running If you dont need the application --> switch if off","title":"Retire - Do we even need this ? NO? Dump it"},{"location":"migration/migration/#retain-not-worth-timemoney-or-is-too-scary-to-migrate","text":"DO NOTHING Old Application - not worth the move Complex application - leave till later Super critical application - risky Complete the migration - swing back to focus on the left-overs","title":"Retain - Not worth time/money or is too scary to migrate"},{"location":"migration/snowball/","text":"AWS Snowball Move large amounts of data IN and OUT of AWS expensive to transfer via netowrk too much data to be transmitted via network Physical storage => suitcase or truck Snowball Ordered from AWS - log a job - device delevered (not instant) Data Encryption uses KMS - at rest 50TB or 80TB 1 GBps (RJ45 1GBas-TX) or 10 GBps (LR/SR) Network 10 TB <--> 10PB economical range ( multiple devices ) Multiple devices to multiple locations ONLY STORAGE DEVICE Snowball Edge Both compute and storage Larger Capacity vs snowball 10 GBps, 10/25 (SFP), 45/50/100 (QSFP+) Storage Optimized - 80TB, 24 vCPU, 32 GiB RAM withEC2 - 1TB SSD Compute Optimized - 100TB + NVME, 52vCPU and 208 GiB RAM Compute Optimized - As above ... with a GPU Ideal for remote sites or where data processing on ingestion is needed Snowmobile Portable DC wihtin a shipping container on a truck Special Order Ideal for single location when 10PB+ is required Up to 100PB per snowmobile Not economical for multi-site (unless huge) or sub 10PB","title":"Snowball"},{"location":"migration/snowball/#aws-snowball","text":"Move large amounts of data IN and OUT of AWS expensive to transfer via netowrk too much data to be transmitted via network Physical storage => suitcase or truck","title":"AWS Snowball"},{"location":"migration/snowball/#snowball","text":"Ordered from AWS - log a job - device delevered (not instant) Data Encryption uses KMS - at rest 50TB or 80TB 1 GBps (RJ45 1GBas-TX) or 10 GBps (LR/SR) Network 10 TB <--> 10PB economical range ( multiple devices ) Multiple devices to multiple locations ONLY STORAGE DEVICE","title":"Snowball"},{"location":"migration/snowball/#snowball-edge","text":"Both compute and storage Larger Capacity vs snowball 10 GBps, 10/25 (SFP), 45/50/100 (QSFP+) Storage Optimized - 80TB, 24 vCPU, 32 GiB RAM withEC2 - 1TB SSD Compute Optimized - 100TB + NVME, 52vCPU and 208 GiB RAM Compute Optimized - As above ... with a GPU Ideal for remote sites or where data processing on ingestion is needed","title":"Snowball Edge"},{"location":"migration/snowball/#snowmobile","text":"Portable DC wihtin a shipping container on a truck Special Order Ideal for single location when 10PB+ is required Up to 100PB per snowmobile Not economical for multi-site (unless huge) or sub 10PB","title":"Snowmobile"},{"location":"migration/storage-gateway/","text":"Storage Gateway FAQS - VM or the hardware appliance in on-premise - Supports protocols such as iSCSI, SMB, and NFS - Use Cases 1. move backups and archives to the cloud 2. reduce on-premises storage with cloud-backed file shares 3. provide on-premises applications low latency access to data stored in AWS 4. data lake access for pre and post processing workflows. Volume Gateway Volume Gateway provides an iSCSI target , which enables you to create block storage volumes and mount them as iSCSI devices from your on-premises or EC2 application servers. The Volume Gateway runs in either a cached or stored mode. In the cached mode , your primary data is written to S3, while retaining your frequently accessed data locally in a cache for low-latency access. In the stored mode , your primary data is stored locally and your entire dataset is available for low-latency access while asynchronously backed up to AWS. Tape Gateway - VTL(virtual tape library) Mode File Gateway Bridges on-premises file storage and S3 Mount Points (shares) available via NFS and SMB Map directly onto an S3 bucket Files stored into a mount point , are visible as objects in a S3 bucket READ and WRITE Caching ensure LAN-like performance The Amazon S3 File Gateway enables you to store and retrieve objects in Amazon S3 using file protocols such as Network File System (NFS) and Server Message Block (SMB). Objects written through S3 File Gateway can be directly accessed in S3. The Amazon FSx File Gateway enables you to store and retrieve files in Amazon FSx for Windows File Server using the SMB protocol. Files written through Amazon FSx File Gateway are directly accessible in Amazon FSx for Windows File Server.","title":"Storage gateway"},{"location":"migration/storage-gateway/#storage-gateway","text":"FAQS - VM or the hardware appliance in on-premise - Supports protocols such as iSCSI, SMB, and NFS - Use Cases 1. move backups and archives to the cloud 2. reduce on-premises storage with cloud-backed file shares 3. provide on-premises applications low latency access to data stored in AWS 4. data lake access for pre and post processing workflows.","title":"Storage Gateway"},{"location":"migration/storage-gateway/#volume-gateway","text":"Volume Gateway provides an iSCSI target , which enables you to create block storage volumes and mount them as iSCSI devices from your on-premises or EC2 application servers. The Volume Gateway runs in either a cached or stored mode. In the cached mode , your primary data is written to S3, while retaining your frequently accessed data locally in a cache for low-latency access. In the stored mode , your primary data is stored locally and your entire dataset is available for low-latency access while asynchronously backed up to AWS.","title":"Volume Gateway"},{"location":"migration/storage-gateway/#tape-gateway-vtlvirtual-tape-library-mode","text":"","title":"Tape Gateway - VTL(virtual tape library) Mode"},{"location":"migration/storage-gateway/#file-gateway","text":"Bridges on-premises file storage and S3 Mount Points (shares) available via NFS and SMB Map directly onto an S3 bucket Files stored into a mount point , are visible as objects in a S3 bucket READ and WRITE Caching ensure LAN-like performance The Amazon S3 File Gateway enables you to store and retrieve objects in Amazon S3 using file protocols such as Network File System (NFS) and Server Message Block (SMB). Objects written through S3 File Gateway can be directly accessed in S3. The Amazon FSx File Gateway enables you to store and retrieve files in Amazon FSx for Windows File Server using the SMB protocol. Files written through Amazon FSx File Gateway are directly accessible in Amazon FSx for Windows File Server.","title":"File Gateway"},{"location":"miscellaneous/device-farm/","text":"Overview Provides managed Web and Mobile Application testing Test on a fleet of real browsers and devices Real devices Phones, tablets, different languages, sizes and operatings systems Use built in or supported automated testing framework Receive reports detailing testing output","title":"AWS Device Farm"},{"location":"miscellaneous/device-farm/#overview","text":"Provides managed Web and Mobile Application testing Test on a fleet of real browsers and devices Real devices Phones, tablets, different languages, sizes and operatings systems Use built in or supported automated testing framework Receive reports detailing testing output","title":"Overview"},{"location":"miscellaneous/glue/","text":"Overview Serverless ETL (Extract, Transform & Load) service different than datapipeline (which can do ETL) and uses servers ( EMR ) Moves and Transforms data between source and destination use glue job to enrich data in serverless way Crawls data sources and generates the AWS Glue Data Catalog Data Source:Store - S3, RDS, JDBC compatible & DynamoDB Data Source:Streams - Kinesis Data Stream & Apache Kafka Data Targets - S3, RDS, JDBC Databases AWS Glue - Data Catalog Persistent metadata about data sources within a region One catalog per region per account Avoids data silos.. Amazon Athena, Redshift Spectrum, EMR & AWS Lake Formation all use Data Catalog configure crawlers for data sources Either AWS Glue or datapipeline","title":"AWS Glue"},{"location":"miscellaneous/glue/#overview","text":"Serverless ETL (Extract, Transform & Load) service different than datapipeline (which can do ETL) and uses servers ( EMR ) Moves and Transforms data between source and destination use glue job to enrich data in serverless way Crawls data sources and generates the AWS Glue Data Catalog Data Source:Store - S3, RDS, JDBC compatible & DynamoDB Data Source:Streams - Kinesis Data Stream & Apache Kafka Data Targets - S3, RDS, JDBC Databases","title":"Overview"},{"location":"miscellaneous/glue/#aws-glue-data-catalog","text":"Persistent metadata about data sources within a region One catalog per region per account Avoids data silos.. Amazon Athena, Redshift Spectrum, EMR & AWS Lake Formation all use Data Catalog configure crawlers for data sources Either AWS Glue or datapipeline","title":"AWS Glue - Data Catalog"},{"location":"miscellaneous/kinesis-video-streams/","text":"Overview Ingest ingest live video from producers Devices like security cameras, smartphones, cars, drones time-serialised audio, thermal and RADAR data Once data is ingested to AWS, consumers can access the data frame by frame .. or as needed Can persist and encrypt (both in rest and transit) cannot ingest data directly.. only via API Integrates with other AWS services like Rekognition and Connect","title":"Kines Video Streams"},{"location":"miscellaneous/kinesis-video-streams/#overview","text":"Ingest ingest live video from producers Devices like security cameras, smartphones, cars, drones time-serialised audio, thermal and RADAR data Once data is ingested to AWS, consumers can access the data frame by frame .. or as needed Can persist and encrypt (both in rest and transit) cannot ingest data directly.. only via API Integrates with other AWS services like Rekognition and Connect","title":"Overview"},{"location":"miscellaneous/lex-connect/","text":"Amazon Lex Text or Voice conversational interfaces Powers the Alexa service Automatic speech recognition (ASR) - speech to text Natural language Understanding (NLU) - Intent Build understanding of voice and text into your application Benefits Scales with load Integrates with AWS services like lambda Quick to Deploy Pay as you go model Apps - chatbots, Voice Assistants, Q&A Bots, Info/Enterprise Bots Amazon Connect Contact Center ... as a service Omnichannel - voice and chat, incoming & outgoing Integrates with PSTN networks for traditional voice Agents can connect using the internet from anywhere Integrates with other AWS services like Lambda/LEX for additional intelligence and features Quick to provision, pay as you go use pricing and scalable","title":"AWS Lex & Connect"},{"location":"miscellaneous/lex-connect/#amazon-lex","text":"Text or Voice conversational interfaces Powers the Alexa service Automatic speech recognition (ASR) - speech to text Natural language Understanding (NLU) - Intent Build understanding of voice and text into your application Benefits Scales with load Integrates with AWS services like lambda Quick to Deploy Pay as you go model Apps - chatbots, Voice Assistants, Q&A Bots, Info/Enterprise Bots","title":"Amazon Lex"},{"location":"miscellaneous/lex-connect/#amazon-connect","text":"Contact Center ... as a service Omnichannel - voice and chat, incoming & outgoing Integrates with PSTN networks for traditional voice Agents can connect using the internet from anywhere Integrates with other AWS services like Lambda/LEX for additional intelligence and features Quick to provision, pay as you go use pricing and scalable","title":"Amazon Connect"},{"location":"miscellaneous/rekognition/","text":"Overview Deep Learning Image and Video analysis Identify objects, people, text, ativities, content moderation Face detection, Face analysis, face comparision, pathing Pay per Image or Pay per minute Integrates with application via API Event Driven - invoke when image is uplaoded to S3 Can analyse live video streams - kinesis video stream","title":"AWS Rekognition"},{"location":"miscellaneous/rekognition/#overview","text":"Deep Learning Image and Video analysis Identify objects, people, text, ativities, content moderation Face detection, Face analysis, face comparision, pathing Pay per Image or Pay per minute Integrates with application via API Event Driven - invoke when image is uplaoded to S3 Can analyse live video streams - kinesis video stream","title":"Overview"},{"location":"security-config/acm/","text":"BackGround HTTP - simple and insecure HTTP S - SSL/TLS Layer of encryption added to HTTP Data is encrypted in-transit Certificates prove identity Chain of trust - Signed by a trusted authority Overview ACM lets you run a public or private Certificate Authority (CA) Private CA - Applications need to trust your private CA Public CA - Browsers trust a list of provider, which can trust other providers. ACM can generate or import certificates if generated, it can automatically renew if imported, you are responsible for importing it Certificates can be deployed only to supported services Cloudfront, ALB ... NOT EC2 ACM is a regional service Certs cannnot leave the region once they are generated or imported in Eg. To use a cert with ALB in ap-southeast-2 you need a cert in ACM in ap-southeast-2 ** Global Services such as CloudFront operates as though within 'us-east-1'","title":"AWS Certificate Manager"},{"location":"security-config/acm/#background","text":"HTTP - simple and insecure HTTP S - SSL/TLS Layer of encryption added to HTTP Data is encrypted in-transit Certificates prove identity Chain of trust - Signed by a trusted authority","title":"BackGround"},{"location":"security-config/acm/#overview","text":"ACM lets you run a public or private Certificate Authority (CA) Private CA - Applications need to trust your private CA Public CA - Browsers trust a list of provider, which can trust other providers. ACM can generate or import certificates if generated, it can automatically renew if imported, you are responsible for importing it Certificates can be deployed only to supported services Cloudfront, ALB ... NOT EC2 ACM is a regional service Certs cannnot leave the region once they are generated or imported in Eg. To use a cert with ALB in ap-southeast-2 you need a cert in ACM in ap-southeast-2 ** Global Services such as CloudFront operates as though within 'us-east-1'","title":"Overview"},{"location":"security-config/cloud-hsm/","text":"CloudHSM HSM - hardware security module to manage cryprtographic operations AWS provisioned it but full managed by customer Federal Information Processing Standard Publication 140-2, (FIPS PUB 140-2) Fully FIPS 140-2 Level 3 ( KMS is L2 overall, some L3 ) KMS can use CloudHSM as a custom key store , CloudHSM integration with KMS (newer feature) CloudHSM KMS FIPS 140-2 level3 FIPS 140-2 level 2 (some L3) Industry Standard API - PKCS#11 ,Java Cryptography Extenstion ( JCE ), Microsoft CryptoNG (CNG) libraries Communicated via AWS API Configure HSM in cluster mode to ensure HA mode (multi AZ). By default, it does not run on HA mode. Use Cases No native AWS integration .. e.g. no s3 SSE client side encryption can be used before uploading Offload the SSL/TLS Processing of Web Servers. Enable Transparent Data Encryption (TDE) for Oracle Databases Protect the Private Keys for an Issuing Certificate Authority (CA)","title":"CloudHSM"},{"location":"security-config/cloud-hsm/#cloudhsm","text":"HSM - hardware security module to manage cryprtographic operations AWS provisioned it but full managed by customer Federal Information Processing Standard Publication 140-2, (FIPS PUB 140-2) Fully FIPS 140-2 Level 3 ( KMS is L2 overall, some L3 ) KMS can use CloudHSM as a custom key store , CloudHSM integration with KMS (newer feature) CloudHSM KMS FIPS 140-2 level3 FIPS 140-2 level 2 (some L3) Industry Standard API - PKCS#11 ,Java Cryptography Extenstion ( JCE ), Microsoft CryptoNG (CNG) libraries Communicated via AWS API Configure HSM in cluster mode to ensure HA mode (multi AZ). By default, it does not run on HA mode.","title":"CloudHSM"},{"location":"security-config/cloud-hsm/#use-cases","text":"No native AWS integration .. e.g. no s3 SSE client side encryption can be used before uploading Offload the SSL/TLS Processing of Web Servers. Enable Transparent Data Encryption (TDE) for Oracle Databases Protect the Private Keys for an Issuing Certificate Authority (CA)","title":"Use Cases"},{"location":"security-config/config/","text":"AWS Config AWS Config is a service which records the configuration of resources over time (configuration items) into configuration histories. Record configuration changes over time on resources Auditing of changes, compliance with standards Deos not prevent changes from happening .. no protection - Regional Service .. supoorts cross region and account aggregation Changes can generate SNS Notifications and near-realtime events via EventBridge and Lambda All the config is stored regionally in s3 bucket which can be interacted with aws config api","title":"AWS Config"},{"location":"security-config/config/#aws-config","text":"AWS Config is a service which records the configuration of resources over time (configuration items) into configuration histories. Record configuration changes over time on resources Auditing of changes, compliance with standards Deos not prevent changes from happening .. no protection - Regional Service .. supoorts cross region and account aggregation Changes can generate SNS Notifications and near-realtime events via EventBridge and Lambda All the config is stored regionally in s3 bucket which can be interacted with aws config api","title":"AWS Config"},{"location":"security-config/guardduty/","text":"Amazon GuardDuty Guard Duty is an automatic threat detection service which reviews data from supported services and attempts to identify any events outside of the 'norm' for a given AWS account or Accounts. Continous security monitoring service - once enabled Analyses supported Data Sources uses AL/ML and threat intelligence feeds Identifies unexpected and unauthorized activity either notify or event-driven protection/remediation Support multiple accounts ( MASTER and MEMBER ) AL/ML - Artificial Intelligence/ Machine Learning","title":"AWS Guard Duty"},{"location":"security-config/guardduty/#amazon-guardduty","text":"Guard Duty is an automatic threat detection service which reviews data from supported services and attempts to identify any events outside of the 'norm' for a given AWS account or Accounts. Continous security monitoring service - once enabled Analyses supported Data Sources uses AL/ML and threat intelligence feeds Identifies unexpected and unauthorized activity either notify or event-driven protection/remediation Support multiple accounts ( MASTER and MEMBER ) AL/ML - Artificial Intelligence/ Machine Learning","title":"Amazon GuardDuty"},{"location":"security-config/inspector/","text":"AWS Inspector Scans EC2 instances and the instance OS scans for vulnerabilities and deviations against best practice Assessment varying period.. 15mins, 1 hours, 8/12 hours or 1 day Provides a report of findings ordered by priority Network Assessment ( Agentless ) Network + Host Assessment ( Agent ) Rules packages determine what is checked Network Reachibility package ( no agent required ) agent can provide additional OS visibility Check reachibility end to end. EC2, ALB, DX, ELB, ENI IGW, ACLs, RT's, SG's, Subnets, VPCs, VGWs & VPC Peering Network Reachability package findings RecognizedPortWithListener : exposed to public and OS listening to the port RecognizedPortNoListener : exposed to public but OS not listening RecognizedPortNoAgent : exposed but no agent to confirm if OS is listening UnrecognizedPortWithListener : unrecognized port exposed and OS listening to the port Host Assessment package ( agent required ) CVE - Common Vulnerabilities & Exposures CIS benchmarks - Center for Internet Security Security best practices for Amazon Inspector","title":"AWS Inspector"},{"location":"security-config/inspector/#aws-inspector","text":"Scans EC2 instances and the instance OS scans for vulnerabilities and deviations against best practice Assessment varying period.. 15mins, 1 hours, 8/12 hours or 1 day Provides a report of findings ordered by priority Network Assessment ( Agentless ) Network + Host Assessment ( Agent ) Rules packages determine what is checked Network Reachibility package ( no agent required ) agent can provide additional OS visibility Check reachibility end to end. EC2, ALB, DX, ELB, ENI IGW, ACLs, RT's, SG's, Subnets, VPCs, VGWs & VPC Peering Network Reachability package findings RecognizedPortWithListener : exposed to public and OS listening to the port RecognizedPortNoListener : exposed to public but OS not listening RecognizedPortNoAgent : exposed but no agent to confirm if OS is listening UnrecognizedPortWithListener : unrecognized port exposed and OS listening to the port Host Assessment package ( agent required ) CVE - Common Vulnerabilities & Exposures CIS benchmarks - Center for Internet Security Security best practices for Amazon Inspector","title":"AWS Inspector"},{"location":"security-config/key-management-service/","text":"AWS KMS Key Management Service Regional and Public Service Create, Store and Manage Keys Supports both symmetric and asymmetric keys Also supports cryptographic operations - encrypt , decrypt & ... Keys never leave KMS - Provides FIPS 140-2 (L2) FIPS 140-2 & FIPS 140 -3 Customer Master Keys (CMK) CMK - C ustomer M aster K ey CMK is logical - ID, date, policy, desc and date backed by physical key material key material can be generated or imported CMK can be used ( encrypt/decrypt ) for up to 4KB of data CMK is encrypted by AWS before storing in the disk. Data Encryption Keys (DEKs) Workaround for 4KB data limitation GenerateDataKey - works on > 4KB linked to specific CMK KMS does not store DEK in any way generates and discard it once user uses it DEK is provided in 2 versions Plaintext version Ciphertext version Encrypt data using plaintext key then discard the plaintext key Store encrypted key with encrypted ddata S3 create DEK for every object Key Concepts CMKs are isolated to a region and never leave AWS Managed or Customer Managed CMKs Customer keys and AWS keys Customer Managed Keys are more configurable Both types of keys support rotation Type of KMS key Can view KMS key metadata Can manage KMS key Used only for my AWS account Automatic rotation Customer managed key Yes Yes Yes Optional. Every 365 days (1 year). AWS managed key Yes No Yes Required. Every 1095 days (3 years). AWS owned key No No No Varies CMK itself contains Backing Key as well as previous backing keys Aliases for CMKs - Per Region Key Policies and Securities Key Policies (Resource) Every CMK has a key policy Customer manage CMK policy can be adjusted CMK key policy explicity told to trust AWS account IAM policies to ensure IAM role/user have access to KMS operation on the key","title":"Key Management Service"},{"location":"security-config/key-management-service/#aws-kms","text":"","title":"AWS KMS"},{"location":"security-config/key-management-service/#key-management-service","text":"Regional and Public Service Create, Store and Manage Keys Supports both symmetric and asymmetric keys Also supports cryptographic operations - encrypt , decrypt & ... Keys never leave KMS - Provides FIPS 140-2 (L2) FIPS 140-2 & FIPS 140 -3","title":"Key Management Service"},{"location":"security-config/key-management-service/#customer-master-keys-cmk","text":"CMK - C ustomer M aster K ey CMK is logical - ID, date, policy, desc and date backed by physical key material key material can be generated or imported CMK can be used ( encrypt/decrypt ) for up to 4KB of data CMK is encrypted by AWS before storing in the disk.","title":"Customer Master Keys (CMK)"},{"location":"security-config/key-management-service/#data-encryption-keys-deks","text":"Workaround for 4KB data limitation GenerateDataKey - works on > 4KB linked to specific CMK KMS does not store DEK in any way generates and discard it once user uses it DEK is provided in 2 versions Plaintext version Ciphertext version Encrypt data using plaintext key then discard the plaintext key Store encrypted key with encrypted ddata S3 create DEK for every object","title":"Data Encryption Keys (DEKs)"},{"location":"security-config/key-management-service/#key-concepts","text":"CMKs are isolated to a region and never leave AWS Managed or Customer Managed CMKs Customer keys and AWS keys Customer Managed Keys are more configurable Both types of keys support rotation Type of KMS key Can view KMS key metadata Can manage KMS key Used only for my AWS account Automatic rotation Customer managed key Yes Yes Yes Optional. Every 365 days (1 year). AWS managed key Yes No Yes Required. Every 1095 days (3 years). AWS owned key No No No Varies CMK itself contains Backing Key as well as previous backing keys Aliases for CMKs - Per Region","title":"Key Concepts"},{"location":"security-config/key-management-service/#key-policies-and-securities","text":"Key Policies (Resource) Every CMK has a key policy Customer manage CMK policy can be adjusted CMK key policy explicity told to trust AWS account IAM policies to ensure IAM role/user have access to KMS operation on the key","title":"Key Policies and Securities"},{"location":"security-config/parameter-store/","text":"AWS Systems Manager Parameter Store Storage for configuration and stores Different types of parameters to be stored String StringList SecureString Ex: Licencse codes, Database Strings, Full Configs & Passwords Hierrarchies & Versioning Allows to store parameters using Hierrarchial Order Allows to store different versions the parameter Can strore both Plaintext and Ciphertext KMS in turn can use Ciphertext Public Parameters are available. E.x. - Latest AMI per region","title":"AWS Parameter Store"},{"location":"security-config/parameter-store/#aws-systems-manager-parameter-store","text":"Storage for configuration and stores Different types of parameters to be stored String StringList SecureString Ex: Licencse codes, Database Strings, Full Configs & Passwords Hierrarchies & Versioning Allows to store parameters using Hierrarchial Order Allows to store different versions the parameter Can strore both Plaintext and Ciphertext KMS in turn can use Ciphertext Public Parameters are available. E.x. - Latest AMI per region","title":"AWS Systems Manager Parameter Store"},{"location":"security-config/secrets-manager/","text":"AWS Secrets Manager Shares functionality with Parameter Store Designed for secrets .. (passwords, API Keys) Usable via Console, CLI, API or SDK's (integration) Supports automatic rotation .. this uses Lambda Directly integrates with some AWS produts like RDS sync the authectication creds as well Permissions controlled by IAM Secrets are encrypted using KMS","title":"AWS Secrets Manager"},{"location":"security-config/secrets-manager/#aws-secrets-manager","text":"Shares functionality with Parameter Store Designed for secrets .. (passwords, API Keys) Usable via Console, CLI, API or SDK's (integration) Supports automatic rotation .. this uses Lambda Directly integrates with some AWS produts like RDS sync the authectication creds as well Permissions controlled by IAM Secrets are encrypted using KMS","title":"AWS Secrets Manager"},{"location":"security-config/vpc-flowlogs/","text":"VPC Flow Logs Capture packet Metadata .. NOT packet contents Different monitoring points to apply... VPC - all interfaces in the VPC Subnet - all interfaces in that subnet Interface directly VPC Flow Logs are NOT realtime Destination can be S3 or Cloudwatch Logs","title":"VPC Flow Logs"},{"location":"security-config/vpc-flowlogs/#vpc-flow-logs","text":"Capture packet Metadata .. NOT packet contents Different monitoring points to apply... VPC - all interfaces in the VPC Subnet - all interfaces in that subnet Interface directly VPC Flow Logs are NOT realtime Destination can be S3 or Cloudwatch Logs","title":"VPC Flow Logs"},{"location":"security-config/waf-shield/","text":"AWS Shield Provides AWS resources with DDoS protection AWS Shield Standard AWS Shield Advance Free with Route53 and CloudFront $3000/month/organization which also supports - EC2, ELB, Global Accelerator in addition to Cloudfront & R53 Protect against Layer 3 and Layer 4 DDoS attacks Protect against Layer 3 and Layer 4 DDoS attacks Provides 24/7 (365 days) advance response team to deal with DDoS atack Financial Insurance for any increased AWS cost incurred by the attack AWS WAF Web Application Firewall Layer 7 (HTTP/s) Firewall Protect against complex Layer 7 attacks/exploits SQL Injections, Cross-Site Scripting , Geo Blocks, Rate Awareness Web Access Control List ( WEBACL ) integrated with ALB, API Gateway and CloudFront WAF provides WEBACL Rules are added to WEBACL and evaluated when traffic arrives WAF Rules WEBACL => RULE GROUPS* => RULES WEBACL Capacity Units (WCU) Simpler rule uses fewer WCU More complex rule uses more WCU Limit on how many WCU on WEBACL Charged for following.. WEBACL - monthly fee for each ACL Rules - monthly fee for each rule Based on no. of Requests WEBACL has default action ALLOW or BLOCK COUNT - how many times a rule is matched Come with 2 different types of rules Regular Rule Rate-Based Rule - frequency at which an IP could go through ACL Conditions ( Layer 7 attributes ) for rule can be based on IP Addresses Country or GEO Length of the request SQL code in the request Strings in the request Scripts and headers in the request AWS Shield and WAF in action Exam Points AWS Shield AWS WAF DDoS Layer 7 (HTTP/HTTPS) Rate Limiter and Layer 7 aspects","title":"AWS Shield & WAF"},{"location":"security-config/waf-shield/#aws-shield","text":"Provides AWS resources with DDoS protection AWS Shield Standard AWS Shield Advance Free with Route53 and CloudFront $3000/month/organization which also supports - EC2, ELB, Global Accelerator in addition to Cloudfront & R53 Protect against Layer 3 and Layer 4 DDoS attacks Protect against Layer 3 and Layer 4 DDoS attacks Provides 24/7 (365 days) advance response team to deal with DDoS atack Financial Insurance for any increased AWS cost incurred by the attack","title":"AWS Shield"},{"location":"security-config/waf-shield/#aws-waf","text":"Web Application Firewall Layer 7 (HTTP/s) Firewall Protect against complex Layer 7 attacks/exploits SQL Injections, Cross-Site Scripting , Geo Blocks, Rate Awareness Web Access Control List ( WEBACL ) integrated with ALB, API Gateway and CloudFront WAF provides WEBACL Rules are added to WEBACL and evaluated when traffic arrives WAF Rules WEBACL => RULE GROUPS* => RULES WEBACL Capacity Units (WCU) Simpler rule uses fewer WCU More complex rule uses more WCU Limit on how many WCU on WEBACL Charged for following.. WEBACL - monthly fee for each ACL Rules - monthly fee for each rule Based on no. of Requests WEBACL has default action ALLOW or BLOCK COUNT - how many times a rule is matched Come with 2 different types of rules Regular Rule Rate-Based Rule - frequency at which an IP could go through ACL Conditions ( Layer 7 attributes ) for rule can be based on IP Addresses Country or GEO Length of the request SQL code in the request Strings in the request Scripts and headers in the request","title":"AWS WAF"},{"location":"security-config/waf-shield/#aws-shield-and-waf-in-action","text":"","title":"AWS Shield and WAF in action"},{"location":"security-config/waf-shield/#exam-points","text":"AWS Shield AWS WAF DDoS Layer 7 (HTTP/HTTPS) Rate Limiter and Layer 7 aspects","title":"Exam Points"}]}